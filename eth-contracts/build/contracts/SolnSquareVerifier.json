{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierContractAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "solutionAddress",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierContractAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"solutionAddress\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mintNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd21e6e573bac014e1a8675f271367ab7d481851584a30cdd7f4b9587f80658f1\",\"urls\":[\"bzz-raw://59d7e9b76f3e92f38225b8bab5149ead0c057dc91a6d6c7caa0ff4b9a46ef8d5\",\"dweb:/ipfs/Qmdg7b1fJxkJZJoNWJtxjkYVepadGvn3TU1Mc1E7zY4A8J\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x158ed65198b45c244047a49e39d29ba53b56d7fb40b4d389a9adcf224d605bbe\",\"urls\":[\"bzz-raw://960ce47f63a7d91b7f956d0edfa5c81b7e3841f39a217cbd235905d985bd6738\",\"dweb:/ipfs/QmZZDbgWtDd6bS9EAPnCY4mGyo3Lb9RZWPk9Aik8Qb4cxo\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x5260046977dd5d2bb16dce04810d4de6d465aab34be1bd3b851aa842e37baffd\",\"urls\":[\"bzz-raw://b69005df8043075d6418207e356e0e6f719ef93d02ba0cc47c33a1fa458587cb\",\"dweb:/ipfs/QmTwKykakCNdYyib9qQRHH81PJ9TmHB9uWEAoANyBgKSTz\"]}},\"version\":1}",
  "bytecode": "0x608060405260006014553480156200001657600080fd5b5060405162003ea538038062003ea583398181016040526200003c9190810190620003d2565b6040518060400160405280600a81526020017f4d494e484f434f494e53000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4e4300000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003e66603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200015491906200040f565b60405180910390a160008060146101000a81548160ff0219169083151502179055506200018e6301ffc9a760e01b6200026c60201b60201c565b620001a66380ac58cd60e01b6200026c60201b60201c565b620001be63780e9d6360e01b6200026c60201b60201c565b82600f9080519060200190620001d69291906200030c565b508160109080519060200190620001ef9291906200030c565b508060119080519060200190620002089291906200030c565b5062000221635b5e139f60e01b6200026c60201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200047a565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002a057600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034f57805160ff191683800117855562000380565b8280016001018555821562000380579182015b828111156200037f57825182559160200191906001019062000362565b5b5090506200038f919062000393565b5090565b620003b891905b80821115620003b45760008160009055506001016200039a565b5090565b90565b600081519050620003cc8162000460565b92915050565b600060208284031215620003e557600080fd5b6000620003f584828501620003bb565b91505092915050565b62000409816200042c565b82525050565b6000602082019050620004266000830184620003fe565b92915050565b6000620004398262000440565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200046b816200042c565b81146200047757600080fd5b50565b6139dc806200048a6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063bedb86fb11610071578063bedb86fb1461046e578063c87b56dd1461048a578063e985e9c5146104ba578063f2fde38b146104ea57610173565b8063a22cb46514610418578063b88d4fde14610434578063bdc32be01461045057610173565b806342842e0e1461031e5780634f6ccce71461033a5780636352211e1461036a57806370a082311461039a578063832e1695146103ca578063893d20e8146103fa57610173565b806323b872dd1161013057806323b872dd1461024e57806327dc297e1461026a5780632f745c591461028657806338bbfa50146102b6578063403d81ae146102d257806340c10f19146102ee57610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806317d7de7c1461021257806318160ddd14610230575b600080fd5b610192600480360361018d9190810190612cbd565b610506565b60405161019f91906134a3565b60405180910390f35b6101c260048036036101bd9190810190612d0f565b61056e565b6040516101cf9190613421565b60405180910390f35b6101f260048036036101ed9190810190612af7565b6105ab565b005b6101fc610794565b60405161020991906134be565b60405180910390f35b61021a610836565b60405161022791906134be565b60405180910390f35b6102386108d8565b604051610245919061366b565b60405180910390f35b610268600480360361026391908101906129f1565b6108e5565b005b610284600480360361027f9190810190612bea565b610908565b005b6102a0600480360361029b9190810190612af7565b61094b565b6040516102ad919061366b565b60405180910390f35b6102d060048036036102cb9190810190612c3e565b6109be565b005b6102ec60048036036102e79190810190612b33565b6109c3565b005b61030860048036036103039190810190612af7565b610c31565b60405161031591906134a3565b60405180910390f35b610338600480360361033391908101906129f1565b610cdf565b005b610354600480360361034f9190810190612d0f565b610cff565b604051610361919061366b565b60405180910390f35b610384600480360361037f9190810190612d0f565b610d33565b6040516103919190613421565b60405180910390f35b6103b460048036036103af919081019061298c565b610d70565b6040516103c1919061366b565b60405180910390f35b6103e460048036036103df919081019061298c565b610dc0565b6040516103f1919061366b565b60405180910390f35b610402610ed9565b60405161040f9190613421565b60405180910390f35b610432600480360361042d9190810190612abb565b610f02565b005b61044e60048036036104499190810190612a40565b611038565b005b61045861105e565b60405161046591906134be565b60405180910390f35b61048860048036036104839190810190612b98565b611100565b005b6104a4600480360361049f9190810190612d0f565b611235565b6040516104b191906134be565b60405180910390f35b6104d460048036036104cf91908101906129b5565b6112fc565b6040516104e191906134a3565b60405180910390f35b61050460048036036104ff919081019061298c565b611390565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190613580565b60405180910390fd5b610622610ed9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610661575061066033836112fc565b5b6106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790613620565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b5050505050905090565b6000600880549050905090565b6108ef3382611509565b6108f857600080fd5b61090383838361159e565b505050565b610947828260006040519080825280601f01601f1916602001820160405280156109415781602001600182028038833980820191505090505b506109be565b5050565b600061095683610d70565b821061096157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109ab57fe5b9060005260206000200154905092915050565b505050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610a1297969594939291906133a0565b6040516020818303038152906040528051906020012090506000601660008381526020019081526020016000206000015411610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90613600565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610ae0929190613640565b60206040518083038186803b158015610af857600080fd5b505afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b309190810190612bc1565b610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690613540565b60405180910390fd5b6000610b7a86610dc0565b905060158181548110610b8957fe5b906000526020600020906002020160166000848152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610c288686610c31565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb9906135c0565b60405180910390fd5b610ccc83836115c2565b610cd5826115e3565b6001905092915050565b610cfa83838360405180602001604052806000815250611038565b505050565b6000610d096108d8565b8210610d1457600080fd5b60088281548110610d2157fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610db9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611701565b9050919050565b6000601460008154809291906001019190505550610ddc61256f565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d81600001518260200151604051610ec6929190613686565b60405180910390a1601454915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f3b57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102c91906134a3565b60405180910390a35050565b6110438484846108e5565b61104f8484848461170f565b61105857600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f65780601f106110cb576101008083540402835291602001916110f6565b820191906000526020600020905b8154815290600101906020018083116110d957829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611186906135c0565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156111fa577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516111ed919061343c565b60405180910390a1611232565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051611229919061343c565b60405180910390a15b50565b606061124082611826565b61124957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f05780601f106112c5576101008083540402835291602001916112f0565b820191906000526020600020905b8154815290600101906020018083116112d357829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461141f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611416906135c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561148f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148690613500565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516114fe9190613421565b60405180910390a150565b60008061151583610d33565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158457508373ffffffffffffffffffffffffffffffffffffffff1661156c8461056e565b73ffffffffffffffffffffffffffffffffffffffff16145b80611595575061159481856112fc565b5b91505092915050565b6115a9838383611898565b6115b38382611af2565b6115bd8282611c90565b505050565b6115cc8282611d57565b6115d68282611c90565b6115df81611f09565b5050565b6115ec81611826565b61162b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611622906135e0565b60405180910390fd5b6116d760118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116c45780601f10611699576101008083540402835291602001916116c4565b820191906000526020600020905b8154815290600101906020018083116116a757829003601f168201915b50505050506116d283611f55565b612082565b6012600083815260200190815260200160002090805190602001906116fd92919061259f565b5050565b600081600001549050919050565b60006117308473ffffffffffffffffffffffffffffffffffffffff166120c6565b61173d576001905061181e565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161177e9493929190613457565b602060405180830381600087803b15801561179857600080fd5b505af11580156117ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117d09190810190612ce6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193090613560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a0906135a0565b60405180910390fd5b6119b281612111565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a4b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121cf565b611a92600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611b4a6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061220890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611c37576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bb757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c0f57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c89919061261f565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611d6081611826565b15611da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9790613520565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e07906134e0565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ea9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f2565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611f9d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061207d565b600082905060005b60008214611fc7578080600101915050600a8281611fbf57fe5b049150611fa5565b6060816040519080825280601f01601f191660200182016040528015611ffc5781602001600182028038833980820191505090505b50905060006001830390505b6000861461207557600a868161201a57fe5b0660300160f81b8282806001900393508151811061203457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161206d57fe5b049550612008565b819450505050505b919050565b60606120be8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612252565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561210857506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121cc5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121e76001826000015461220890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061224a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612514565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122ae5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612333578881815181106122da57fe5b602001015160f81c60f81b8383806001019450815181106122f757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c5565b600090505b87518110156123a65787818151811061234d57fe5b602001015160f81c60f81b83838060010194508151811061236a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612338565b600090505b8651811015612419578681815181106123c057fe5b602001015160f81c60f81b8383806001019450815181106123dd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123ab565b600090505b855181101561248c5785818151811061243357fe5b602001015160f81c60f81b83838060010194508151811061245057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061241e565b600090505b84518110156124ff578481815181106124a657fe5b602001015160f81c60f81b8383806001019450815181106124c357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612491565b82995050505050505050505095945050505050565b600083831115829061255c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255391906134be565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125e057805160ff191683800117855561260e565b8280016001018555821561260e579182015b8281111561260d5782518255916020019190600101906125f2565b5b50905061261b919061264b565b5090565b81548183558181111561264657818360005260206000209182019101612645919061264b565b5b505050565b61266d91905b80821115612669576000816000905550600101612651565b5090565b90565b60008135905061267f81613926565b92915050565b600082601f83011261269657600080fd5b60026126a96126a4826136dc565b6136af565b915081838560208402820111156126bf57600080fd5b60005b838110156126ef57816126d58882612977565b8452602084019350602083019250506001810190506126c2565b5050505092915050565b600082601f83011261270a57600080fd5b600261271d612718826136fe565b6136af565b9150818385602084028201111561273357600080fd5b60005b8381101561276357816127498882612977565b845260208401935060208301925050600181019050612736565b5050505092915050565b60008135905061277c8161393d565b92915050565b6000815190506127918161393d565b92915050565b6000813590506127a681613954565b92915050565b6000813590506127bb8161396b565b92915050565b6000815190506127d08161396b565b92915050565b600082601f8301126127e757600080fd5b81356127fa6127f582613720565b6136af565b9150808252602083016020830185838301111561281657600080fd5b6128218382846138c9565b50505092915050565b600082601f83011261283b57600080fd5b813561284e6128498261374c565b6136af565b9150808252602083016020830185838301111561286a57600080fd5b6128758382846138c9565b50505092915050565b60006040828403121561289057600080fd5b61289a60406136af565b905060006128aa84828501612977565b60008301525060206128be84828501612977565b60208301525092915050565b6000608082840312156128dc57600080fd5b6128e660406136af565b905060006128f684828501612685565b600083015250604061290a84828501612685565b60208301525092915050565b6000610100828403121561292957600080fd5b61293360606136af565b905060006129438482850161287e565b6000830152506040612957848285016128ca565b60208301525060c061296b8482850161287e565b60408301525092915050565b60008135905061298681613982565b92915050565b60006020828403121561299e57600080fd5b60006129ac84828501612670565b91505092915050565b600080604083850312156129c857600080fd5b60006129d685828601612670565b92505060206129e785828601612670565b9150509250929050565b600080600060608486031215612a0657600080fd5b6000612a1486828701612670565b9350506020612a2586828701612670565b9250506040612a3686828701612977565b9150509250925092565b60008060008060808587031215612a5657600080fd5b6000612a6487828801612670565b9450506020612a7587828801612670565b9350506040612a8687828801612977565b925050606085013567ffffffffffffffff811115612aa357600080fd5b612aaf878288016127d6565b91505092959194509250565b60008060408385031215612ace57600080fd5b6000612adc85828601612670565b9250506020612aed8582860161276d565b9150509250929050565b60008060408385031215612b0a57600080fd5b6000612b1885828601612670565b9250506020612b2985828601612977565b9150509250929050565b6000806000806101808587031215612b4a57600080fd5b6000612b5887828801612670565b9450506020612b6987828801612977565b9350506040612b7a87828801612916565b925050610140612b8c878288016126f9565b91505092959194509250565b600060208284031215612baa57600080fd5b6000612bb88482850161276d565b91505092915050565b600060208284031215612bd357600080fd5b6000612be184828501612782565b91505092915050565b60008060408385031215612bfd57600080fd5b6000612c0b85828601612797565b925050602083013567ffffffffffffffff811115612c2857600080fd5b612c348582860161282a565b9150509250929050565b600080600060608486031215612c5357600080fd5b6000612c6186828701612797565b935050602084013567ffffffffffffffff811115612c7e57600080fd5b612c8a8682870161282a565b925050604084013567ffffffffffffffff811115612ca757600080fd5b612cb3868287016127d6565b9150509250925092565b600060208284031215612ccf57600080fd5b6000612cdd848285016127ac565b91505092915050565b600060208284031215612cf857600080fd5b6000612d06848285016127c1565b91505092915050565b600060208284031215612d2157600080fd5b6000612d2f84828501612977565b91505092915050565b6000612d44838361335c565b60208301905092915050565b6000612d5c838361337a565b60208301905092915050565b612d7181613893565b82525050565b612d8081613815565b82525050565b612d8f81613797565b612d9981846137dd565b9250612da482613782565b8060005b83811015612dd5578151612dbc8782612d38565b9650612dc7836137c5565b925050600181019050612da8565b505050505050565b612de681613797565b612df081846137e8565b9250612dfb82613782565b8060005b83811015612e2c578151612e138782612d50565b9650612e1e836137c5565b925050600181019050612dff565b505050505050565b612e3d8161378c565b612e4781846137d2565b9250612e5282613778565b8060005b83811015612e83578151612e6a8782612d38565b9650612e75836137b8565b925050600181019050612e56565b505050505050565b612e948161378c565b612e9e81846137e8565b9250612ea982613778565b8060005b83811015612eda578151612ec18782612d50565b9650612ecc836137b8565b925050600181019050612ead565b505050505050565b612eeb81613827565b82525050565b6000612efc826137a2565b612f0681856137f3565b9350612f168185602086016138d8565b612f1f81613915565b840191505092915050565b6000612f35826137ad565b612f3f8185613804565b9350612f4f8185602086016138d8565b612f5881613915565b840191505092915050565b6000612f70600f83613804565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612fb0601b83613804565b91507f43616c6c65722061646472657373206d757374206265207265616c00000000006000830152602082019050919050565b6000612ff0601483613804565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613030601383613804565b91507f566572696669636174696f6e206661696c6564000000000000000000000000006000830152602082019050919050565b6000613070602583613804565b91507f546f6b656e20646f6573206e6f742062656c6f6e6720746f2066726f6d20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130d6602b83613804565b91507f446f206e6f74206e65656420746f2067697665207065726d697373696f6e206660008301527f6f72207468656d73656c660000000000000000000000000000000000000000006020830152604082019050919050565b600061313c601583613804565b91507f4164647265737320746f20697320696e76616c696400000000000000000000006000830152602082019050919050565b600061317c601c83613804565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b60006131bc601683613804565b91507f546f6b656e496420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b60006131fc601683613804565b91507f536f6c7574696f6e20616c726561647920757365642e000000000000000000006000830152602082019050919050565b600061323c604a83613804565b91507f53656e646572206973206e6f742074686520636f6e7472616374206f776e657260008301527f20616e64206f70657261746f72206973417070726f766564466f72416c6c206960208301527f73206e6f742074727565000000000000000000000000000000000000000000006040830152606082019050919050565b6040820160008201516132d1600085018261335c565b5060208201516132e4602085018261335c565b50505050565b6080820160008201516133006000850182612e34565b5060208201516133136040850182612e34565b50505050565b6101008201600082015161333060008501826132bb565b50602082015161334360408501826132ea565b50604082015161335660c08501826132bb565b50505050565b61336581613889565b82525050565b61337481613889565b82525050565b61338381613889565b82525050565b61339a61339582613889565b61390b565b82525050565b60006133ac828a613389565b6020820191506133bc8289613389565b6020820191506133cc8288612e8b565b6040820191506133dc8287612e8b565b6040820191506133ec8286613389565b6020820191506133fc8285613389565b60208201915061340c8284612ddd565b60408201915081905098975050505050505050565b60006020820190506134366000830184612d77565b92915050565b60006020820190506134516000830184612d68565b92915050565b600060808201905061346c6000830187612d68565b6134796020830186612d77565b613486604083018561336b565b81810360608301526134988184612ef1565b905095945050505050565b60006020820190506134b86000830184612ee2565b92915050565b600060208201905081810360008301526134d88184612f2a565b905092915050565b600060208201905081810360008301526134f981612f63565b9050919050565b6000602082019050818103600083015261351981612fa3565b9050919050565b6000602082019050818103600083015261353981612fe3565b9050919050565b6000602082019050818103600083015261355981613023565b9050919050565b6000602082019050818103600083015261357981613063565b9050919050565b60006020820190508181036000830152613599816130c9565b9050919050565b600060208201905081810360008301526135b98161312f565b9050919050565b600060208201905081810360008301526135d98161316f565b9050919050565b600060208201905081810360008301526135f9816131af565b9050919050565b60006020820190508181036000830152613619816131ef565b9050919050565b600060208201905081810360008301526136398161322f565b9050919050565b6000610140820190506136566000830185613319565b613664610100830184612d86565b9392505050565b6000602082019050613680600083018461336b565b92915050565b600060408201905061369b600083018561336b565b6136a86020830184612d77565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156136d257600080fd5b8060405250919050565b600067ffffffffffffffff8211156136f357600080fd5b602082029050919050565b600067ffffffffffffffff82111561371557600080fd5b602082029050919050565b600067ffffffffffffffff82111561373757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561376357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061382082613869565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061389e826138a5565b9050919050565b60006138b0826138b7565b9050919050565b60006138c282613869565b9050919050565b82818337600083830152505050565b60005b838110156138f65780820151818401526020810190506138db565b83811115613905576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61392f81613815565b811461393a57600080fd5b50565b61394681613827565b811461395157600080fd5b50565b61395d81613833565b811461396857600080fd5b50565b6139748161383d565b811461397f57600080fd5b50565b61398b81613889565b811461399657600080fd5b5056fea365627a7a723158206e066567ab2fb9624cf8c7e77e326ab573f5f1a4412facb3551fc400796ad2086c6578706572696d656e74616cf564736f6c6343000511004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063bedb86fb11610071578063bedb86fb1461046e578063c87b56dd1461048a578063e985e9c5146104ba578063f2fde38b146104ea57610173565b8063a22cb46514610418578063b88d4fde14610434578063bdc32be01461045057610173565b806342842e0e1461031e5780634f6ccce71461033a5780636352211e1461036a57806370a082311461039a578063832e1695146103ca578063893d20e8146103fa57610173565b806323b872dd1161013057806323b872dd1461024e57806327dc297e1461026a5780632f745c591461028657806338bbfa50146102b6578063403d81ae146102d257806340c10f19146102ee57610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806317d7de7c1461021257806318160ddd14610230575b600080fd5b610192600480360361018d9190810190612cbd565b610506565b60405161019f91906134a3565b60405180910390f35b6101c260048036036101bd9190810190612d0f565b61056e565b6040516101cf9190613421565b60405180910390f35b6101f260048036036101ed9190810190612af7565b6105ab565b005b6101fc610794565b60405161020991906134be565b60405180910390f35b61021a610836565b60405161022791906134be565b60405180910390f35b6102386108d8565b604051610245919061366b565b60405180910390f35b610268600480360361026391908101906129f1565b6108e5565b005b610284600480360361027f9190810190612bea565b610908565b005b6102a0600480360361029b9190810190612af7565b61094b565b6040516102ad919061366b565b60405180910390f35b6102d060048036036102cb9190810190612c3e565b6109be565b005b6102ec60048036036102e79190810190612b33565b6109c3565b005b61030860048036036103039190810190612af7565b610c31565b60405161031591906134a3565b60405180910390f35b610338600480360361033391908101906129f1565b610cdf565b005b610354600480360361034f9190810190612d0f565b610cff565b604051610361919061366b565b60405180910390f35b610384600480360361037f9190810190612d0f565b610d33565b6040516103919190613421565b60405180910390f35b6103b460048036036103af919081019061298c565b610d70565b6040516103c1919061366b565b60405180910390f35b6103e460048036036103df919081019061298c565b610dc0565b6040516103f1919061366b565b60405180910390f35b610402610ed9565b60405161040f9190613421565b60405180910390f35b610432600480360361042d9190810190612abb565b610f02565b005b61044e60048036036104499190810190612a40565b611038565b005b61045861105e565b60405161046591906134be565b60405180910390f35b61048860048036036104839190810190612b98565b611100565b005b6104a4600480360361049f9190810190612d0f565b611235565b6040516104b191906134be565b60405180910390f35b6104d460048036036104cf91908101906129b5565b6112fc565b6040516104e191906134a3565b60405180910390f35b61050460048036036104ff919081019061298c565b611390565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190613580565b60405180910390fd5b610622610ed9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610661575061066033836112fc565b5b6106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790613620565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b5050505050905090565b6000600880549050905090565b6108ef3382611509565b6108f857600080fd5b61090383838361159e565b505050565b610947828260006040519080825280601f01601f1916602001820160405280156109415781602001600182028038833980820191505090505b506109be565b5050565b600061095683610d70565b821061096157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109ab57fe5b9060005260206000200154905092915050565b505050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610a1297969594939291906133a0565b6040516020818303038152906040528051906020012090506000601660008381526020019081526020016000206000015411610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90613600565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610ae0929190613640565b60206040518083038186803b158015610af857600080fd5b505afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b309190810190612bc1565b610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690613540565b60405180910390fd5b6000610b7a86610dc0565b905060158181548110610b8957fe5b906000526020600020906002020160166000848152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610c288686610c31565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb9906135c0565b60405180910390fd5b610ccc83836115c2565b610cd5826115e3565b6001905092915050565b610cfa83838360405180602001604052806000815250611038565b505050565b6000610d096108d8565b8210610d1457600080fd5b60088281548110610d2157fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610db9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611701565b9050919050565b6000601460008154809291906001019190505550610ddc61256f565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d81600001518260200151604051610ec6929190613686565b60405180910390a1601454915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f3b57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102c91906134a3565b60405180910390a35050565b6110438484846108e5565b61104f8484848461170f565b61105857600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f65780601f106110cb576101008083540402835291602001916110f6565b820191906000526020600020905b8154815290600101906020018083116110d957829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611186906135c0565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156111fa577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516111ed919061343c565b60405180910390a1611232565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051611229919061343c565b60405180910390a15b50565b606061124082611826565b61124957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f05780601f106112c5576101008083540402835291602001916112f0565b820191906000526020600020905b8154815290600101906020018083116112d357829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461141f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611416906135c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561148f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148690613500565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516114fe9190613421565b60405180910390a150565b60008061151583610d33565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158457508373ffffffffffffffffffffffffffffffffffffffff1661156c8461056e565b73ffffffffffffffffffffffffffffffffffffffff16145b80611595575061159481856112fc565b5b91505092915050565b6115a9838383611898565b6115b38382611af2565b6115bd8282611c90565b505050565b6115cc8282611d57565b6115d68282611c90565b6115df81611f09565b5050565b6115ec81611826565b61162b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611622906135e0565b60405180910390fd5b6116d760118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116c45780601f10611699576101008083540402835291602001916116c4565b820191906000526020600020905b8154815290600101906020018083116116a757829003601f168201915b50505050506116d283611f55565b612082565b6012600083815260200190815260200160002090805190602001906116fd92919061259f565b5050565b600081600001549050919050565b60006117308473ffffffffffffffffffffffffffffffffffffffff166120c6565b61173d576001905061181e565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161177e9493929190613457565b602060405180830381600087803b15801561179857600080fd5b505af11580156117ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117d09190810190612ce6565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193090613560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a0906135a0565b60405180910390fd5b6119b281612111565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a4b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121cf565b611a92600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611b4a6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061220890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611c37576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bb757fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611c0f57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c89919061261f565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611d6081611826565b15611da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9790613520565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e07906134e0565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ea9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121f2565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611f9d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061207d565b600082905060005b60008214611fc7578080600101915050600a8281611fbf57fe5b049150611fa5565b6060816040519080825280601f01601f191660200182016040528015611ffc5781602001600182028038833980820191505090505b50905060006001830390505b6000861461207557600a868161201a57fe5b0660300160f81b8282806001900393508151811061203457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161206d57fe5b049550612008565b819450505050505b919050565b60606120be8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612252565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561210857506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121cc5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121e76001826000015461220890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061224a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612514565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122ae5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612333578881815181106122da57fe5b602001015160f81c60f81b8383806001019450815181106122f757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c5565b600090505b87518110156123a65787818151811061234d57fe5b602001015160f81c60f81b83838060010194508151811061236a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612338565b600090505b8651811015612419578681815181106123c057fe5b602001015160f81c60f81b8383806001019450815181106123dd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123ab565b600090505b855181101561248c5785818151811061243357fe5b602001015160f81c60f81b83838060010194508151811061245057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061241e565b600090505b84518110156124ff578481815181106124a657fe5b602001015160f81c60f81b8383806001019450815181106124c357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612491565b82995050505050505050505095945050505050565b600083831115829061255c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255391906134be565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125e057805160ff191683800117855561260e565b8280016001018555821561260e579182015b8281111561260d5782518255916020019190600101906125f2565b5b50905061261b919061264b565b5090565b81548183558181111561264657818360005260206000209182019101612645919061264b565b5b505050565b61266d91905b80821115612669576000816000905550600101612651565b5090565b90565b60008135905061267f81613926565b92915050565b600082601f83011261269657600080fd5b60026126a96126a4826136dc565b6136af565b915081838560208402820111156126bf57600080fd5b60005b838110156126ef57816126d58882612977565b8452602084019350602083019250506001810190506126c2565b5050505092915050565b600082601f83011261270a57600080fd5b600261271d612718826136fe565b6136af565b9150818385602084028201111561273357600080fd5b60005b8381101561276357816127498882612977565b845260208401935060208301925050600181019050612736565b5050505092915050565b60008135905061277c8161393d565b92915050565b6000815190506127918161393d565b92915050565b6000813590506127a681613954565b92915050565b6000813590506127bb8161396b565b92915050565b6000815190506127d08161396b565b92915050565b600082601f8301126127e757600080fd5b81356127fa6127f582613720565b6136af565b9150808252602083016020830185838301111561281657600080fd5b6128218382846138c9565b50505092915050565b600082601f83011261283b57600080fd5b813561284e6128498261374c565b6136af565b9150808252602083016020830185838301111561286a57600080fd5b6128758382846138c9565b50505092915050565b60006040828403121561289057600080fd5b61289a60406136af565b905060006128aa84828501612977565b60008301525060206128be84828501612977565b60208301525092915050565b6000608082840312156128dc57600080fd5b6128e660406136af565b905060006128f684828501612685565b600083015250604061290a84828501612685565b60208301525092915050565b6000610100828403121561292957600080fd5b61293360606136af565b905060006129438482850161287e565b6000830152506040612957848285016128ca565b60208301525060c061296b8482850161287e565b60408301525092915050565b60008135905061298681613982565b92915050565b60006020828403121561299e57600080fd5b60006129ac84828501612670565b91505092915050565b600080604083850312156129c857600080fd5b60006129d685828601612670565b92505060206129e785828601612670565b9150509250929050565b600080600060608486031215612a0657600080fd5b6000612a1486828701612670565b9350506020612a2586828701612670565b9250506040612a3686828701612977565b9150509250925092565b60008060008060808587031215612a5657600080fd5b6000612a6487828801612670565b9450506020612a7587828801612670565b9350506040612a8687828801612977565b925050606085013567ffffffffffffffff811115612aa357600080fd5b612aaf878288016127d6565b91505092959194509250565b60008060408385031215612ace57600080fd5b6000612adc85828601612670565b9250506020612aed8582860161276d565b9150509250929050565b60008060408385031215612b0a57600080fd5b6000612b1885828601612670565b9250506020612b2985828601612977565b9150509250929050565b6000806000806101808587031215612b4a57600080fd5b6000612b5887828801612670565b9450506020612b6987828801612977565b9350506040612b7a87828801612916565b925050610140612b8c878288016126f9565b91505092959194509250565b600060208284031215612baa57600080fd5b6000612bb88482850161276d565b91505092915050565b600060208284031215612bd357600080fd5b6000612be184828501612782565b91505092915050565b60008060408385031215612bfd57600080fd5b6000612c0b85828601612797565b925050602083013567ffffffffffffffff811115612c2857600080fd5b612c348582860161282a565b9150509250929050565b600080600060608486031215612c5357600080fd5b6000612c6186828701612797565b935050602084013567ffffffffffffffff811115612c7e57600080fd5b612c8a8682870161282a565b925050604084013567ffffffffffffffff811115612ca757600080fd5b612cb3868287016127d6565b9150509250925092565b600060208284031215612ccf57600080fd5b6000612cdd848285016127ac565b91505092915050565b600060208284031215612cf857600080fd5b6000612d06848285016127c1565b91505092915050565b600060208284031215612d2157600080fd5b6000612d2f84828501612977565b91505092915050565b6000612d44838361335c565b60208301905092915050565b6000612d5c838361337a565b60208301905092915050565b612d7181613893565b82525050565b612d8081613815565b82525050565b612d8f81613797565b612d9981846137dd565b9250612da482613782565b8060005b83811015612dd5578151612dbc8782612d38565b9650612dc7836137c5565b925050600181019050612da8565b505050505050565b612de681613797565b612df081846137e8565b9250612dfb82613782565b8060005b83811015612e2c578151612e138782612d50565b9650612e1e836137c5565b925050600181019050612dff565b505050505050565b612e3d8161378c565b612e4781846137d2565b9250612e5282613778565b8060005b83811015612e83578151612e6a8782612d38565b9650612e75836137b8565b925050600181019050612e56565b505050505050565b612e948161378c565b612e9e81846137e8565b9250612ea982613778565b8060005b83811015612eda578151612ec18782612d50565b9650612ecc836137b8565b925050600181019050612ead565b505050505050565b612eeb81613827565b82525050565b6000612efc826137a2565b612f0681856137f3565b9350612f168185602086016138d8565b612f1f81613915565b840191505092915050565b6000612f35826137ad565b612f3f8185613804565b9350612f4f8185602086016138d8565b612f5881613915565b840191505092915050565b6000612f70600f83613804565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000612fb0601b83613804565b91507f43616c6c65722061646472657373206d757374206265207265616c00000000006000830152602082019050919050565b6000612ff0601483613804565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613030601383613804565b91507f566572696669636174696f6e206661696c6564000000000000000000000000006000830152602082019050919050565b6000613070602583613804565b91507f546f6b656e20646f6573206e6f742062656c6f6e6720746f2066726f6d20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130d6602b83613804565b91507f446f206e6f74206e65656420746f2067697665207065726d697373696f6e206660008301527f6f72207468656d73656c660000000000000000000000000000000000000000006020830152604082019050919050565b600061313c601583613804565b91507f4164647265737320746f20697320696e76616c696400000000000000000000006000830152602082019050919050565b600061317c601c83613804565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b60006131bc601683613804565b91507f546f6b656e496420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b60006131fc601683613804565b91507f536f6c7574696f6e20616c726561647920757365642e000000000000000000006000830152602082019050919050565b600061323c604a83613804565b91507f53656e646572206973206e6f742074686520636f6e7472616374206f776e657260008301527f20616e64206f70657261746f72206973417070726f766564466f72416c6c206960208301527f73206e6f742074727565000000000000000000000000000000000000000000006040830152606082019050919050565b6040820160008201516132d1600085018261335c565b5060208201516132e4602085018261335c565b50505050565b6080820160008201516133006000850182612e34565b5060208201516133136040850182612e34565b50505050565b6101008201600082015161333060008501826132bb565b50602082015161334360408501826132ea565b50604082015161335660c08501826132bb565b50505050565b61336581613889565b82525050565b61337481613889565b82525050565b61338381613889565b82525050565b61339a61339582613889565b61390b565b82525050565b60006133ac828a613389565b6020820191506133bc8289613389565b6020820191506133cc8288612e8b565b6040820191506133dc8287612e8b565b6040820191506133ec8286613389565b6020820191506133fc8285613389565b60208201915061340c8284612ddd565b60408201915081905098975050505050505050565b60006020820190506134366000830184612d77565b92915050565b60006020820190506134516000830184612d68565b92915050565b600060808201905061346c6000830187612d68565b6134796020830186612d77565b613486604083018561336b565b81810360608301526134988184612ef1565b905095945050505050565b60006020820190506134b86000830184612ee2565b92915050565b600060208201905081810360008301526134d88184612f2a565b905092915050565b600060208201905081810360008301526134f981612f63565b9050919050565b6000602082019050818103600083015261351981612fa3565b9050919050565b6000602082019050818103600083015261353981612fe3565b9050919050565b6000602082019050818103600083015261355981613023565b9050919050565b6000602082019050818103600083015261357981613063565b9050919050565b60006020820190508181036000830152613599816130c9565b9050919050565b600060208201905081810360008301526135b98161312f565b9050919050565b600060208201905081810360008301526135d98161316f565b9050919050565b600060208201905081810360008301526135f9816131af565b9050919050565b60006020820190508181036000830152613619816131ef565b9050919050565b600060208201905081810360008301526136398161322f565b9050919050565b6000610140820190506136566000830185613319565b613664610100830184612d86565b9392505050565b6000602082019050613680600083018461336b565b92915050565b600060408201905061369b600083018561336b565b6136a86020830184612d77565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156136d257600080fd5b8060405250919050565b600067ffffffffffffffff8211156136f357600080fd5b602082029050919050565b600067ffffffffffffffff82111561371557600080fd5b602082029050919050565b600067ffffffffffffffff82111561373757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561376357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061382082613869565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061389e826138a5565b9050919050565b60006138b0826138b7565b9050919050565b60006138c282613869565b9050919050565b82818337600083830152505050565b60005b838110156138f65780820151818401526020810190506138db565b83811115613905576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61392f81613815565b811461393a57600080fd5b50565b61394681613827565b811461395157600080fd5b50565b61395d81613833565b811461396857600080fd5b50565b6139748161383d565b811461397f57600080fd5b50565b61398b81613889565b811461399657600080fd5b5056fea365627a7a723158206e066567ab2fb9624cf8c7e77e326ab573f5f1a4412facb3551fc400796ad2086c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "334:1931:6:-;;;731:1;698:34;;422:114;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:114:6;;;;;;;;;;;;;;;;;;;;;;;;20076:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:10;686:6;;:19;;;;;;;;;;;;;;;;;;720:27;740:6;;;;;;;;;;;720:27;;;;;;;;;;;;;;;2143:5;2133:7;;:15;;;;;;;;;;;;;;;;;;3088:40;2685:10;3107:20;;3088:18;;;:40;;:::i;:::-;5234;5108:10;5253:20;;5234:18;;;:40;;:::i;:::-;12777:51;12383:10;12796:31;;12777:18;;;:51;;:::i;:::-;20225:4;20217:5;:12;;;;;;;;;;;;:::i;:::-;;20249:6;20239:7;:16;;;;;;;;;;;;:::i;:::-;;20281:12;20265:13;:28;;;;;;;;;;;;:::i;:::-;;20304:49;19887:10;20323:29;;20304:18;;;:49;;:::i;:::-;20076:284;;;505:23:6;485:8;;:44;;;;;;;;;;;;;;;;;;422:114;334:1931;;3438:158:4;3528:10;3513:25;;:11;:25;;;;;3505:34;;;;;;3585:4;3549:20;:33;3570:11;3549:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3438:158;:::o;334:1931:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;416:113;499:24;517:5;499:24;;;494:3;487:37;481:48;;;536:213;;654:2;643:9;639:18;631:26;;668:71;736:1;725:9;721:17;712:6;668:71;;;625:124;;;;;756:91;;818:24;836:5;818:24;;;807:35;;801:46;;;;854:121;;927:42;920:5;916:54;905:65;;899:76;;;;982:117;1051:24;1069:5;1051:24;;;1044:5;1041:35;1031:2;;1090:1;1087;1080:12;1031:2;1025:74;;334:1931:6;;;;;;;",
  "deployedSourceMap": "334:1931:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:1931:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6489:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5813:670;;;;;;;;;;;;;;;;:::i;:::-;;20539:90;;;:::i;:::-;;;;;;;;;;;;;;;;20447:86;;;:::i;:::-;;;;;;;;;;;;;;;;13542:94;;;:::i;:::-;;;;;;;;;;;;;;;;7633:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;13208:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;1746:515:6;;;;;;;;;;;;;;;;:::i;:::-;;22340:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7819:132;;;;;;;;;;;;;;;;:::i;:::-;;13973:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5578:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5287:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1133:385:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;467:80:4;;;:::i;:::-;;;;;;;;;;;;;;;;6948:213;;;;;;;;;;;;;;;;:::i;:::-;;7957:211;;;;;;;;;;;;;;;;:::i;:::-;;20635:102;;;:::i;:::-;;;;;;;;;;;;;;;;1805:210;;;;;;;;;;;;;;;;:::i;:::-;;20743:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7482:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1179:354;;;;;;;;;;;;;;;;:::i;:::-;;3226:133;3296:4;3319:20;:33;3340:11;3319:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3312:40;;3226:133;;;:::o;6489:167::-;6548:7;6625:15;:24;6641:7;6625:24;;;;;;;;;;;;;;;;;;;;;6618:31;;6489:167;;;:::o;5813:670::-;5975:2;5961:16;;:10;:16;;;;5953:72;;;;;;;;;;;;;;;;;;;;;;6162:10;:8;:10::i;:::-;6148:24;;:10;:24;;;:60;;;;6176:32;6193:10;6205:2;6176:16;:32::i;:::-;6148:60;6140:147;;;;;;;;;;;;;;;;;;;;;;6387:4;6350:18;:30;6369:10;6350:30;;;;;;;;;;;;;;;:34;6381:2;6350:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;6468:7;6464:2;6443:33;;6452:10;6443:33;;;;;;;;;;;;5813:670;;:::o;20539:90::-;20583:13;20615:7;20608:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20539:90;:::o;20447:86::-;20489:13;20521:5;20514:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20447:86;:::o;13542:94::-;13586:7;13612:10;:17;;;;13605:24;;13542:94;:::o;7633:180::-;7723:39;7742:10;7754:7;7723:18;:39::i;:::-;7715:48;;;;;;7774:32;7788:4;7794:2;7798:7;7774:13;:32::i;:::-;7633:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13208:182:4:-;13288:7;13323:16;13333:5;13323:9;:16::i;:::-;13315:5;:24;13307:33;;;;;;13357:12;:19;13370:5;13357:19;;;;;;;;;;;;;;;13377:5;13357:26;;;;;;;;;;;;;;;;13350:33;;13208:182;;;;:::o;14929:166:5:-;;;;:::o;1746:515:6:-;1868:11;1909:5;:7;;;:9;;;1920:5;:7;;;:9;;;1931:5;:7;;;:9;;;1942:5;:7;;;:9;;;1953:5;:7;;;:9;;;1964:5;:7;;;:9;;;1975:6;1892:90;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1892:90:6;;;1882:101;;;;;;1868:115;;2028:1;2001:13;:18;2015:3;2001:18;;;;;;;;;;;:24;;;:28;1993:63;;;;;;;;;;;;;;;;;;;;;;2074:8;;;;;;;;;;;:17;;;2092:5;2099:6;2074:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2074:32:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2074:32:6;;;;;;;;;2066:64;;;;;;;;;;;;;;;;;;;;;;2141:13;2157:15;2169:2;2157:11;:15::i;:::-;2141:31;;2203:9;2213:5;2203:16;;;;;;;;;;;;;;;;;;2182:13;:18;2196:3;2182:18;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:17;2235:2;2239:7;2230:4;:17::i;:::-;;1746:515;;;;;;:::o;22340:182:4:-;22417:4;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;22432:24;22444:2;22448:7;22432:11;:24::i;:::-;22466:27;22485:7;22466:18;:27::i;:::-;22511:4;22504:11;;22340:182;;;;:::o;7819:132::-;7905:39;7922:4;7928:2;7932:7;7905:39;;;;;;;;;;;;:16;:39::i;:::-;7819:132;;;:::o;13973:148::-;14031:7;14066:13;:11;:13::i;:::-;14058:5;:21;14050:30;;;;;;14097:10;14108:5;14097:17;;;;;;;;;;;;;;;;14090:24;;13973:148;;;:::o;5578:162::-;5633:7;5713:11;:20;5725:7;5713:20;;;;;;;;;;;;;;;;;;;;;5706:27;;5578:162;;;:::o;5287:285::-;5342:7;5531:34;:17;:24;5549:5;5531:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5524:41;;5287:285;;;:::o;1133:385:6:-;1194:7;1213:14;;:16;;;;;;;;;;;;;1240:27;;:::i;:::-;1270:98;;;;;;;;1300:14;;1270:98;;;;1342:15;1270:98;;;;;1240:128;;1379:9;1394:11;1379:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1379:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:58;1436:11;:17;;;1455:11;:24;;;1422:58;;;;;;;;;;;;;;;;1497:14;;1490:21;;;1133:385;;;:::o;467:80:4:-;508:7;534:6;;;;;;;;;;;527:13;;467:80;:::o;6948:213::-;7033:10;7027:16;;:2;:16;;;;7019:25;;;;;;7091:8;7054:18;:30;7073:10;7054:30;;;;;;;;;;;;;;;:34;7085:2;7054:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7141:2;7114:40;;7129:10;7114:40;;;7145:8;7114:40;;;;;;;;;;;;;;;6948:213;;:::o;7957:211::-;8063:31;8076:4;8082:2;8086:7;8063:12;:31::i;:::-;8112:48;8135:4;8141:2;8145:7;8154:5;8112:22;:48::i;:::-;8104:57;;;;;;7957:211;;;;:::o;20635:102::-;20685:13;20717;20710:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20635:102;:::o;1805:210::-;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;1877:5;1867:7;;:15;;;;;;;;;;;;;;;;;;1896:7;;;;;;;;;;;1892:117;;;1924:18;1931:10;1924:18;;;;;;;;;;;;;;;1892:117;;;1978:20;1987:10;1978:20;;;;;;;;;;;;;;;1892:117;1805:210;:::o;20743:151::-;20801:13;20834:16;20842:7;20834;:16::i;:::-;20826:25;;;;;;20868:10;:19;20879:7;20868:19;;;;;;;;;;;20861:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20743:151;;;:::o;7482:145::-;7562:4;7585:18;:25;7604:5;7585:25;;;;;;;;;;;;;;;:35;7611:8;7585:35;;;;;;;;;;;;;;;;;;;;;;;;;7578:42;;7482:145;;;;:::o;1179:354::-;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;1419:1;1397:24;;:10;:24;;;;1389:64;;;;;;;;;;;;;;;;;;;;;;1473:8;1464:6;;:17;;;;;;;;;;;;;;;;;;1496:29;1516:8;1496:29;;;;;;;;;;;;;;;1179:354;:::o;8874:246::-;8959:4;8975:13;8991:16;8999:7;8991;:16::i;:::-;8975:32;;9036:5;9025:16;;:7;:16;;;:51;;;;9069:7;9045:31;;:20;9057:7;9045:11;:20::i;:::-;:31;;;9025:51;:87;;;;9080:32;9097:5;9104:7;9080:16;:32::i;:::-;9025:87;9017:96;;;8874:246;;;;:::o;14496:239::-;14581:38;14601:4;14607:2;14611:7;14581:19;:38::i;:::-;14630:47;14663:4;14669:7;14630:32;:47::i;:::-;14688:40;14716:2;14720:7;14688:27;:40::i;:::-;14496:239;;;:::o;14990:196::-;15053:24;15065:2;15069:7;15053:11;:24::i;:::-;15088:40;15116:2;15120:7;15088:27;:40::i;:::-;15139;15171:7;15139:31;:40::i;:::-;14990:196;;:::o;21372:191::-;21438:16;21446:7;21438;:16::i;:::-;21430:51;;;;;;;;;;;;;;;;;;;;;;21513:43;21523:13;21513:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21538:17;21547:7;21538:8;:17::i;:::-;21513:9;:43::i;:::-;21491:10;:19;21502:7;21491:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21372:191;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11228:347:4:-;11349:4;11374:15;:2;:13;;;:15::i;:::-;11369:58;;11412:4;11405:11;;;;11369:58;11437:13;11469:2;11453:36;;;11490:10;11502:4;11508:7;11517:5;11453:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11453:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11453:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11453:70:4;;;;;;;;;11437:86;;4241:10;11551:16;;11541:26;;;:6;:26;;;;11533:35;;;11228:347;;;;;;;:::o;8362:152::-;8419:4;8435:13;8451:11;:20;8463:7;8451:20;;;;;;;;;;;;;;;;;;;;;8435:36;;8505:1;8488:19;;:5;:19;;;;8481:26;;;8362:152;;;:::o;9978:722::-;10166:4;10142:28;;:11;:20;10154:7;10142:20;;;;;;;;;;;;;;;;;;;;;:28;;;10134:78;;;;;;;;;;;;;;;;;;;;;;10313:1;10299:16;;:2;:16;;;;10291:50;;;;;;;;;;;;;;;;;;;;;;10392:23;10407:7;10392:14;:23::i;:::-;10524:2;10501:11;:20;10513:7;10501:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10536:35;:17;:23;10554:4;10536:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10581:33;:17;:21;10599:2;10581:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10685:7;10681:2;10666:27;;10675:4;10666:27;;;;;;;;;;;;9978:722;;;:::o;16962:1128::-;17224:22;17249:32;17279:1;17249:12;:18;17262:4;17249:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17224:57;;17291:18;17312:17;:26;17330:7;17312:26;;;;;;;;;;;;17291:47;;17456:14;17442:10;:28;17438:323;;17486:19;17508:12;:18;17521:4;17508:18;;;;;;;;;;;;;;;17527:14;17508:34;;;;;;;;;;;;;;;;17486:56;;17590:11;17557:12;:18;17570:4;17557:18;;;;;;;;;;;;;;;17576:10;17557:30;;;;;;;;;;;;;;;:44;;;;17706:10;17673:17;:30;17691:11;17673:30;;;;;;;;;;;:43;;;;17438:323;;17847:12;:18;17860:4;17847:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16962:1128;;;;:::o;15808:183::-;15921:12;:16;15934:2;15921:16;;;;;;;;;;;;;;;:23;;;;15892:17;:26;15910:7;15892:26;;;;;;;;;;;:52;;;;15954:12;:16;15967:2;15954:16;;;;;;;;;;;;;;;15976:7;15954:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15954:30:4;;;;;;;;;;;;;;;;;;;;;;15808:183;;:::o;9277:502::-;9433:16;9441:7;9433;:16::i;:::-;9432:17;9424:50;;;;;;;;;;;;;;;;;;;;;;9506:1;9492:16;;:2;:16;;;;9484:44;;;;;;;;;;;;;;;;;;;;;;9642:2;9619:11;:20;9631:7;9619:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9654:33;:17;:21;9672:2;9654:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9764:7;9760:2;9739:33;;9756:1;9739:33;;;;;;;;;;;;9277:502;;:::o;16186:161::-;16289:10;:17;;;;16262:15;:24;16278:7;16262:24;;;;;;;;;;;:44;;;;16316:10;16332:7;16316:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16316:24:4;;;;;;;;;;;;;;;;;;;;;;16186:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11656:171:4:-;11755:1;11719:38;;:15;:24;11735:7;11719:24;;;;;;;;;;;;;;;;;;;;;:38;;;11715:106;;11808:1;11773:15;:24;11789:7;11773:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11715:106;11656:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;334:1931:6:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:710;;;;;7647:3;7635:9;7626:7;7622:23;7618:33;7615:2;;;7664:1;7661;7654:12;7615:2;7699:1;7716:53;7761:7;7752:6;7741:9;7737:22;7716:53;;;7706:63;;7678:97;7806:2;7824:53;7869:7;7860:6;7849:9;7845:22;7824:53;;;7814:63;;7785:98;7914:2;7932:76;8000:7;7991:6;7980:9;7976:22;7932:76;;;7922:86;;7893:121;8045:3;8064:76;8132:7;8123:6;8112:9;8108:22;8064:76;;;8054:86;;8024:122;7609:547;;;;;;;;8163:235;;8264:2;8252:9;8243:7;8239:23;8235:32;8232:2;;;8280:1;8277;8270:12;8232:2;8315:1;8332:50;8374:7;8365:6;8354:9;8350:22;8332:50;;;8322:60;;8294:94;8226:172;;;;;8405:257;;8517:2;8505:9;8496:7;8492:23;8488:32;8485:2;;;8533:1;8530;8523:12;8485:2;8568:1;8585:61;8638:7;8629:6;8618:9;8614:22;8585:61;;;8575:71;;8547:105;8479:183;;;;;8669:472;;;8800:2;8788:9;8779:7;8775:23;8771:32;8768:2;;;8816:1;8813;8806:12;8768:2;8851:1;8868:53;8913:7;8904:6;8893:9;8889:22;8868:53;;;8858:63;;8830:97;8986:2;8975:9;8971:18;8958:32;9010:18;9002:6;8999:30;8996:2;;;9042:1;9039;9032:12;8996:2;9062:63;9117:7;9108:6;9097:9;9093:22;9062:63;;;9052:73;;8937:194;8762:379;;;;;;9148:701;;;;9305:2;9293:9;9284:7;9280:23;9276:32;9273:2;;;9321:1;9318;9311:12;9273:2;9356:1;9373:53;9418:7;9409:6;9398:9;9394:22;9373:53;;;9363:63;;9335:97;9491:2;9480:9;9476:18;9463:32;9515:18;9507:6;9504:30;9501:2;;;9547:1;9544;9537:12;9501:2;9567:63;9622:7;9613:6;9602:9;9598:22;9567:63;;;9557:73;;9442:194;9695:2;9684:9;9680:18;9667:32;9719:18;9711:6;9708:30;9705:2;;;9751:1;9748;9741:12;9705:2;9771:62;9825:7;9816:6;9805:9;9801:22;9771:62;;;9761:72;;9646:193;9267:582;;;;;;9856:239;;9959:2;9947:9;9938:7;9934:23;9930:32;9927:2;;;9975:1;9972;9965:12;9927:2;10010:1;10027:52;10071:7;10062:6;10051:9;10047:22;10027:52;;;10017:62;;9989:96;9921:174;;;;;10102:261;;10216:2;10204:9;10195:7;10191:23;10187:32;10184:2;;;10232:1;10229;10222:12;10184:2;10267:1;10284:63;10339:7;10330:6;10319:9;10315:22;10284:63;;;10274:73;;10246:107;10178:185;;;;;10370:241;;10474:2;10462:9;10453:7;10449:23;10445:32;10442:2;;;10490:1;10487;10480:12;10442:2;10525:1;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;;;10532:63;;10504:97;10436:175;;;;;10619:173;;10706:46;10748:3;10740:6;10706:46;;;10781:4;10776:3;10772:14;10758:28;;10699:93;;;;;10801:189;;10896:54;10946:3;10938:6;10896:54;;;10979:4;10974:3;10970:14;10956:28;;10889:101;;;;;10998:142;11089:45;11128:5;11089:45;;;11084:3;11077:58;11071:69;;;11147:113;11230:24;11248:5;11230:24;;;11225:3;11218:37;11212:48;;;11300:660;11433:52;11479:5;11433:52;;;11498:84;11575:6;11570:3;11498:84;;;11491:91;;11603:54;11651:5;11603:54;;;11677:7;11705:1;11690:258;11715:6;11712:1;11709:13;11690:258;;;11782:6;11776:13;11803:63;11862:3;11847:13;11803:63;;;11796:70;;11883:58;11934:6;11883:58;;;11873:68;;11747:201;11737:1;11734;11730:9;11725:14;;11690:258;;;11694:14;11412:548;;;;;;12001:704;12152:52;12198:5;12152:52;;;12217:102;12312:6;12307:3;12217:102;;;12210:109;;12340:54;12388:5;12340:54;;;12414:7;12442:1;12427:266;12452:6;12449:1;12446:13;12427:266;;;12519:6;12513:13;12540:71;12607:3;12592:13;12540:71;;;12533:78;;12628:58;12679:6;12628:58;;;12618:68;;12484:209;12474:1;12471;12467:9;12462:14;;12427:266;;;12431:14;12131:574;;;;;;12746:624;12865:48;12907:5;12865:48;;;12926:74;12993:6;12988:3;12926:74;;;12919:81;;13021:50;13065:5;13021:50;;;13091:7;13119:1;13104:254;13129:6;13126:1;13123:13;13104:254;;;13196:6;13190:13;13217:63;13276:3;13261:13;13217:63;;;13210:70;;13297:54;13344:6;13297:54;;;13287:64;;13161:197;13151:1;13148;13144:9;13139:14;;13104:254;;;13108:14;12844:526;;;;;;13411:688;13558:48;13600:5;13558:48;;;13619:102;13714:6;13709:3;13619:102;;;13612:109;;13742:50;13786:5;13742:50;;;13812:7;13840:1;13825:262;13850:6;13847:1;13844:13;13825:262;;;13917:6;13911:13;13938:71;14005:3;13990:13;13938:71;;;13931:78;;14026:54;14073:6;14026:54;;;14016:64;;13882:205;13872:1;13869;13865:9;13860:14;;13825:262;;;13829:14;13537:562;;;;;;14107:104;14184:21;14199:5;14184:21;;;14179:3;14172:34;14166:45;;;14218:343;;14328:38;14360:5;14328:38;;;14378:70;14441:6;14436:3;14378:70;;;14371:77;;14453:52;14498:6;14493:3;14486:4;14479:5;14475:16;14453:52;;;14526:29;14548:6;14526:29;;;14521:3;14517:39;14510:46;;14308:253;;;;;;14568:347;;14680:39;14713:5;14680:39;;;14731:71;14795:6;14790:3;14731:71;;;14724:78;;14807:52;14852:6;14847:3;14840:4;14833:5;14829:16;14807:52;;;14880:29;14902:6;14880:29;;;14875:3;14871:39;14864:46;;14660:255;;;;;;14923:315;;15083:67;15147:2;15142:3;15083:67;;;15076:74;;15183:17;15179:1;15174:3;15170:11;15163:38;15229:2;15224:3;15220:12;15213:19;;15069:169;;;;15247:327;;15407:67;15471:2;15466:3;15407:67;;;15400:74;;15507:29;15503:1;15498:3;15494:11;15487:50;15565:2;15560:3;15556:12;15549:19;;15393:181;;;;15583:320;;15743:67;15807:2;15802:3;15743:67;;;15736:74;;15843:22;15839:1;15834:3;15830:11;15823:43;15894:2;15889:3;15885:12;15878:19;;15729:174;;;;15912:319;;16072:67;16136:2;16131:3;16072:67;;;16065:74;;16172:21;16168:1;16163:3;16159:11;16152:42;16222:2;16217:3;16213:12;16206:19;;16058:173;;;;16240:374;;16400:67;16464:2;16459:3;16400:67;;;16393:74;;16500:34;16496:1;16491:3;16487:11;16480:55;16569:7;16564:2;16559:3;16555:12;16548:29;16605:2;16600:3;16596:12;16589:19;;16386:228;;;;16623:380;;16783:67;16847:2;16842:3;16783:67;;;16776:74;;16883:34;16879:1;16874:3;16870:11;16863:55;16952:13;16947:2;16942:3;16938:12;16931:35;16994:2;16989:3;16985:12;16978:19;;16769:234;;;;17012:321;;17172:67;17236:2;17231:3;17172:67;;;17165:74;;17272:23;17268:1;17263:3;17259:11;17252:44;17324:2;17319:3;17315:12;17308:19;;17158:175;;;;17342:328;;17502:67;17566:2;17561:3;17502:67;;;17495:74;;17602:30;17598:1;17593:3;17589:11;17582:51;17661:2;17656:3;17652:12;17645:19;;17488:182;;;;17679:322;;17839:67;17903:2;17898:3;17839:67;;;17832:74;;17939:24;17935:1;17930:3;17926:11;17919:45;17992:2;17987:3;17983:12;17976:19;;17825:176;;;;18010:322;;18170:67;18234:2;18229:3;18170:67;;;18163:74;;18270:24;18266:1;18261:3;18257:11;18250:45;18323:2;18318:3;18314:12;18307:19;;18156:176;;;;18341:448;;18501:67;18565:2;18560:3;18501:67;;;18494:74;;18601:34;18597:1;18592:3;18588:11;18581:55;18670:34;18665:2;18660:3;18656:12;18649:56;18739:12;18734:2;18729:3;18725:12;18718:34;18780:2;18775:3;18771:12;18764:19;;18487:302;;;;18852:456;18981:4;18976:3;18972:14;19061:4;19054:5;19050:16;19044:23;19073:63;19130:4;19125:3;19121:14;19107:12;19073:63;;;19001:141;19212:4;19205:5;19201:16;19195:23;19224:63;19281:4;19276:3;19272:14;19258:12;19224:63;;;19152:141;18954:354;;;;19370:540;19499:4;19494:3;19490:14;19579:4;19572:5;19568:16;19562:23;19591:105;19690:4;19685:3;19681:14;19667:12;19591:105;;;19519:183;19772:4;19765:5;19761:16;19755:23;19784:105;19883:4;19878:3;19874:14;19860:12;19784:105;;;19712:183;19472:438;;;;19970:757;20109:6;20104:3;20100:16;20191:4;20184:5;20180:16;20174:23;20203:109;20306:4;20301:3;20297:14;20283:12;20203:109;;;20131:187;20388:4;20381:5;20377:16;20371:23;20400:109;20503:4;20498:3;20494:14;20480:12;20400:109;;;20328:187;20585:4;20578:5;20574:16;20568:23;20597:109;20700:4;20695:3;20691:14;20677:12;20597:109;;;20525:187;20082:645;;;;20734:103;20807:24;20825:5;20807:24;;;20802:3;20795:37;20789:48;;;20844:113;20927:24;20945:5;20927:24;;;20922:3;20915:37;20909:48;;;20964:111;21045:24;21063:5;21045:24;;;21040:3;21033:37;21027:48;;;21082:152;21183:45;21203:24;21221:5;21203:24;;;21183:45;;;21178:3;21171:58;21165:69;;;21241:1338;;21658:75;21729:3;21720:6;21658:75;;;21755:2;21750:3;21746:12;21739:19;;21769:75;21840:3;21831:6;21769:75;;;21866:2;21861:3;21857:12;21850:19;;21880:117;21993:3;21984:6;21880:117;;;22019:2;22014:3;22010:12;22003:19;;22033:117;22146:3;22137:6;22033:117;;;22172:2;22167:3;22163:12;22156:19;;22186:75;22257:3;22248:6;22186:75;;;22283:2;22278:3;22274:12;22267:19;;22297:75;22368:3;22359:6;22297:75;;;22394:2;22389:3;22385:12;22378:19;;22408:121;22525:3;22516:6;22408:121;;;22551:2;22546:3;22542:12;22535:19;;22571:3;22564:10;;21646:933;;;;;;;;;;;22586:213;;22704:2;22693:9;22689:18;22681:26;;22718:71;22786:1;22775:9;22771:17;22762:6;22718:71;;;22675:124;;;;;22806:229;;22932:2;22921:9;22917:18;22909:26;;22946:79;23022:1;23011:9;23007:17;22998:6;22946:79;;;22903:132;;;;;23042:647;;23270:3;23259:9;23255:19;23247:27;;23285:79;23361:1;23350:9;23346:17;23337:6;23285:79;;;23375:72;23443:2;23432:9;23428:18;23419:6;23375:72;;;23458;23526:2;23515:9;23511:18;23502:6;23458:72;;;23578:9;23572:4;23568:20;23563:2;23552:9;23548:18;23541:48;23603:76;23674:4;23665:6;23603:76;;;23595:84;;23241:448;;;;;;;;23696:201;;23808:2;23797:9;23793:18;23785:26;;23822:65;23884:1;23873:9;23869:17;23860:6;23822:65;;;23779:118;;;;;23904:301;;24042:2;24031:9;24027:18;24019:26;;24092:9;24086:4;24082:20;24078:1;24067:9;24063:17;24056:47;24117:78;24190:4;24181:6;24117:78;;;24109:86;;24013:192;;;;;24212:407;;24403:2;24392:9;24388:18;24380:26;;24453:9;24447:4;24443:20;24439:1;24428:9;24424:17;24417:47;24478:131;24604:4;24478:131;;;24470:139;;24374:245;;;;24626:407;;24817:2;24806:9;24802:18;24794:26;;24867:9;24861:4;24857:20;24853:1;24842:9;24838:17;24831:47;24892:131;25018:4;24892:131;;;24884:139;;24788:245;;;;25040:407;;25231:2;25220:9;25216:18;25208:26;;25281:9;25275:4;25271:20;25267:1;25256:9;25252:17;25245:47;25306:131;25432:4;25306:131;;;25298:139;;25202:245;;;;25454:407;;25645:2;25634:9;25630:18;25622:26;;25695:9;25689:4;25685:20;25681:1;25670:9;25666:17;25659:47;25720:131;25846:4;25720:131;;;25712:139;;25616:245;;;;25868:407;;26059:2;26048:9;26044:18;26036:26;;26109:9;26103:4;26099:20;26095:1;26084:9;26080:17;26073:47;26134:131;26260:4;26134:131;;;26126:139;;26030:245;;;;26282:407;;26473:2;26462:9;26458:18;26450:26;;26523:9;26517:4;26513:20;26509:1;26498:9;26494:17;26487:47;26548:131;26674:4;26548:131;;;26540:139;;26444:245;;;;26696:407;;26887:2;26876:9;26872:18;26864:26;;26937:9;26931:4;26927:20;26923:1;26912:9;26908:17;26901:47;26962:131;27088:4;26962:131;;;26954:139;;26858:245;;;;27110:407;;27301:2;27290:9;27286:18;27278:26;;27351:9;27345:4;27341:20;27337:1;27326:9;27322:17;27315:47;27376:131;27502:4;27376:131;;;27368:139;;27272:245;;;;27524:407;;27715:2;27704:9;27700:18;27692:26;;27765:9;27759:4;27755:20;27751:1;27740:9;27736:17;27729:47;27790:131;27916:4;27790:131;;;27782:139;;27686:245;;;;27938:407;;28129:2;28118:9;28114:18;28106:26;;28179:9;28173:4;28169:20;28165:1;28154:9;28150:17;28143:47;28204:131;28330:4;28204:131;;;28196:139;;28100:245;;;;28352:407;;28543:2;28532:9;28528:18;28520:26;;28593:9;28587:4;28583:20;28579:1;28568:9;28564:17;28557:47;28618:131;28744:4;28618:131;;;28610:139;;28514:245;;;;28766:510;;29004:3;28993:9;28989:19;28981:27;;29019:117;29133:1;29122:9;29118:17;29109:6;29019:117;;;29147:119;29261:3;29250:9;29246:19;29237:6;29147:119;;;28975:301;;;;;;29283:213;;29401:2;29390:9;29386:18;29378:26;;29415:71;29483:1;29472:9;29468:17;29459:6;29415:71;;;29372:124;;;;;29503:324;;29649:2;29638:9;29634:18;29626:26;;29663:71;29731:1;29720:9;29716:17;29707:6;29663:71;;;29745:72;29813:2;29802:9;29798:18;29789:6;29745:72;;;29620:207;;;;;;29834:256;;29896:2;29890:9;29880:19;;29934:4;29926:6;29922:17;30033:6;30021:10;30018:22;29997:18;29985:10;29982:34;29979:62;29976:2;;;30054:1;30051;30044:12;29976:2;30074:10;30070:2;30063:22;29874:216;;;;;30097:240;;30250:18;30242:6;30239:30;30236:2;;;30282:1;30279;30272:12;30236:2;30317:4;30309:6;30305:17;30297:25;;30173:164;;;;30344:244;;30501:18;30493:6;30490:30;30487:2;;;30533:1;30530;30523:12;30487:2;30568:4;30560:6;30556:17;30548:25;;30424:164;;;;30595:321;;30738:18;30730:6;30727:30;30724:2;;;30770:1;30767;30760:12;30724:2;30837:4;30833:9;30826:4;30818:6;30814:17;30810:33;30802:41;;30901:4;30895;30891:15;30883:23;;30661:255;;;;30923:322;;31067:18;31059:6;31056:30;31053:2;;;31099:1;31096;31089:12;31053:2;31166:4;31162:9;31155:4;31147:6;31143:17;31139:33;31131:41;;31230:4;31224;31220:15;31212:23;;30990:255;;;;31252:93;;31332:3;31324:11;;31318:27;;;;31352:97;;31436:3;31428:11;;31422:27;;;;31456:104;;31546:4;31536:14;;31524:36;;;;31567:108;;31661:4;31651:14;;31639:36;;;;31682:121;;31775:5;31769:12;31759:22;;31740:63;;;;31810:122;;31904:5;31898:12;31888:22;;31869:63;;;;31939:102;;32031:4;32026:3;32022:14;32014:22;;32008:33;;;;32048:106;;32144:4;32139:3;32135:14;32127:22;;32121:33;;;;32162:130;;32283:3;32268:18;;32261:31;;;;;32301:140;;32432:3;32417:18;;32410:31;;;;;32450:158;;32599:3;32584:18;;32577:31;;;;;32617:162;;32731:6;32726:3;32719:19;32768:4;32763:3;32759:14;32744:29;;32712:67;;;;;32788:163;;32903:6;32898:3;32891:19;32940:4;32935:3;32931:14;32916:29;;32884:67;;;;;32959:91;;33021:24;33039:5;33021:24;;;33010:35;;33004:46;;;;33057:85;;33130:5;33123:13;33116:21;33105:32;;33099:43;;;;33149:72;;33211:5;33200:16;;33194:27;;;;33228:144;;33300:66;33293:5;33289:78;33278:89;;33272:100;;;;33379:121;;33452:42;33445:5;33441:54;33430:65;;33424:76;;;;33507:72;;33569:5;33558:16;;33552:27;;;;33586:129;;33673:37;33704:5;33673:37;;;33660:50;;33654:61;;;;33722:121;;33801:37;33832:5;33801:37;;;33788:50;;33782:61;;;;33850:108;;33929:24;33947:5;33929:24;;;33916:37;;33910:48;;;;33966:145;34047:6;34042:3;34037;34024:30;34103:1;34094:6;34089:3;34085:16;34078:27;34017:94;;;;34120:268;34185:1;34192:101;34206:6;34203:1;34200:13;34192:101;;;34282:1;34277:3;34273:11;34267:18;34263:1;34258:3;34254:11;34247:39;34228:2;34225:1;34221:10;34216:15;;34192:101;;;34308:6;34305:1;34302:13;34299:2;;;34373:1;34364:6;34359:3;34355:16;34348:27;34299:2;34169:219;;;;;34396:74;;34460:5;34449:16;;34443:27;;;;34477:97;;34565:2;34561:7;34556:2;34549:5;34545:14;34541:28;34531:38;;34525:49;;;;34582:117;34651:24;34669:5;34651:24;;;34644:5;34641:35;34631:2;;34690:1;34687;34680:12;34631:2;34625:74;;34706:111;34772:21;34787:5;34772:21;;;34765:5;34762:32;34752:2;;34808:1;34805;34798:12;34752:2;34746:71;;34824:117;34893:24;34911:5;34893:24;;;34886:5;34883:35;34873:2;;34932:1;34929;34922:12;34873:2;34867:74;;34948:115;35016:23;35033:5;35016:23;;;35009:5;35006:34;34996:2;;35054:1;35051;35044:12;34996:2;34990:73;;35070:117;35139:24;35157:5;35139:24;;;35132:5;35129:35;35119:2;;35178:1;35175;35168:12;35119:2;35113:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport './ERC721Mintable.sol';\nimport './Verifier.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n\n    Verifier private verifier;\n\n    constructor (address verifierContractAddress) public {\n        verifier = Verifier(verifierContractAddress);\n    }\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address ownerAddress;\n    }\n\n    uint256 private solutionLength = 0;\n\n    // TODO define an array of the above struct\n    Solution[] private solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private usedSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256, address); \n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address solutionAddress) public returns(uint256) {\n        solutionLength++;\n\n        Solution memory newSolution = Solution({\n            index: solutionLength,\n            ownerAddress: solutionAddress\n        });\n\n        solutions.push(newSolution);\n\n        emit SolutionAdded(newSolution.index, newSolution.ownerAddress);\n        return solutionLength;\n    } \n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintNewNFT(address to, uint256 tokenId, Verifier.Proof memory proof, uint[2] memory inputs)\n    public {\n        bytes32 key = keccak256(abi.encodePacked(proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y, inputs));\n        require(usedSolutions[key].index > 0, \"Solution already used.\");\n        require(verifier.verifyTx(proof, inputs), \"Verification failed\");\n\n        uint256 index = addSolution(to);\n        usedSolutions[key] = solutions[index];\n\n        mint(to, tokenId);       \n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/cesar.agena/Blockchain Nano Degree/capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7861
      ]
    },
    "id": 7862,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7708,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7709,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7710,
        "nodeType": "ImportDirective",
        "scope": 7862,
        "sourceUnit": 1439,
        "src": "68:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7711,
        "nodeType": "ImportDirective",
        "scope": 7862,
        "sourceUnit": 8784,
        "src": "99:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7712,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "365:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1438",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7713,
            "nodeType": "InheritanceSpecifier",
            "src": "365:17:6"
          }
        ],
        "contractDependencies": [
          399,
          465,
          511,
          997,
          1295,
          1405,
          1438,
          7706
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7861,
        "linearizedBaseContracts": [
          7861,
          1438,
          1405,
          7706,
          1295,
          997,
          511,
          465,
          399
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7715,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7861,
            "src": "390:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8783",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7714,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8783,
              "src": "390:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8783",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7726,
              "nodeType": "Block",
              "src": "475:61:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7720,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7715,
                      "src": "485:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8783",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7722,
                          "name": "verifierContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7717,
                          "src": "505:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7721,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8783,
                        "src": "496:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8783_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "496:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8783",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "485:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8783",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7725,
                  "nodeType": "ExpressionStatement",
                  "src": "485:44:6"
                }
              ]
            },
            "documentation": null,
            "id": 7727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7717,
                  "name": "verifierContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7727,
                  "src": "435:31:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:33:6"
            },
            "returnParameters": {
              "id": 7719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:6"
            },
            "scope": 7861,
            "src": "422:114:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7732,
            "members": [
              {
                "constant": false,
                "id": 7729,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "642:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7728,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7731,
                "name": "ownerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "665:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7730,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7861,
            "src": "616:76:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7735,
            "name": "solutionLength",
            "nodeType": "VariableDeclaration",
            "scope": 7861,
            "src": "698:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "698:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "731:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7738,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7861,
            "src": "787:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7736,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7732,
                "src": "787:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7737,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "787:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7742,
            "name": "usedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7861,
            "src": "887:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7741,
              "keyType": {
                "id": 7739,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "895:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "887:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7740,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7732,
                "src": "906:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7748,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "1025:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7746,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "1034:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:18:6"
            },
            "src": "1005:38:6"
          },
          {
            "body": {
              "id": 7780,
              "nodeType": "Block",
              "src": "1203:315:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1213:16:6",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7755,
                      "name": "solutionLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7735,
                      "src": "1213:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:16:6"
                },
                {
                  "assignments": [
                    7759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7759,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7780,
                      "src": "1240:27:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7758,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7732,
                        "src": "1240:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7764,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7761,
                        "name": "solutionLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1300:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7762,
                        "name": "solutionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7750,
                        "src": "1342:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7760,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7732,
                      "src": "1270:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7732_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "ownerAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1270:98:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7732_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1240:128:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7768,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7759,
                        "src": "1394:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7765,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7738,
                        "src": "1379:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1379:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7732_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7770,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7772,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7759,
                          "src": "1436:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7729,
                        "src": "1436:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7774,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7759,
                          "src": "1455:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ownerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7731,
                        "src": "1455:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7771,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7748,
                      "src": "1422:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7777,
                  "nodeType": "EmitStatement",
                  "src": "1417:63:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7778,
                    "name": "solutionLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7735,
                    "src": "1497:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7754,
                  "id": 7779,
                  "nodeType": "Return",
                  "src": "1490:21:6"
                }
              ]
            },
            "documentation": null,
            "id": 7781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7750,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7781,
                  "src": "1154:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:25:6"
            },
            "returnParameters": {
              "id": 7754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7781,
                  "src": "1194:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:9:6"
            },
            "scope": 7861,
            "src": "1133:385:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7859,
              "nodeType": "Block",
              "src": "1858:403:6",
              "statements": [
                {
                  "assignments": [
                    7795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7795,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7859,
                      "src": "1868:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7794,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7820,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7799,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1909:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7800,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8452,
                              "src": "1909:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7869_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7801,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7866,
                            "src": "1909:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7802,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1920:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7803,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8452,
                              "src": "1920:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7869_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7804,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7868,
                            "src": "1920:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7805,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1931:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7806,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8454,
                              "src": "1931:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7878_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7873,
                            "src": "1931:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7808,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1942:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8454,
                              "src": "1942:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7878_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7810,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7877,
                            "src": "1942:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7811,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1953:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7812,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8456,
                              "src": "1953:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7869_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7866,
                            "src": "1953:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7814,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7787,
                                "src": "1964:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7815,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8456,
                              "src": "1964:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7869_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7816,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7868,
                            "src": "1964:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7817,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7791,
                            "src": "1975:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7797,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8785,
                            "src": "1892:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1892:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1892:90:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7796,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8792,
                      "src": "1882:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:101:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1868:115:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7822,
                              "name": "usedSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7742,
                              "src": "2001:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7824,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7823,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7795,
                              "src": "2015:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2001:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7732_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7825,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7729,
                          "src": "2001:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2028:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2001:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920757365642e",
                        "id": 7828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2031:24:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        },
                        "value": "Solution already used."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                          "typeString": "literal_string \"Solution already used.\""
                        }
                      ],
                      "id": 7821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8801,
                        8802
                      ],
                      "referencedDeclaration": 8802,
                      "src": "1993:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:63:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7830,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:63:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7834,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7787,
                            "src": "2092:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7835,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7791,
                            "src": "2099:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7832,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7715,
                            "src": "2074:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8783",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8782,
                          "src": "2074:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8457_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2074:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566572696669636174696f6e206661696c6564",
                        "id": 7837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2108:21:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        },
                        "value": "Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        }
                      ],
                      "id": 7831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8801,
                        8802
                      ],
                      "referencedDeclaration": 8802,
                      "src": "2066:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2066:64:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7839,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:64:6"
                },
                {
                  "assignments": [
                    7841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7841,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 7859,
                      "src": "2141:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2141:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7843,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "2169:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7842,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7781,
                      "src": "2157:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 7844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2141:31:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7846,
                        "name": "usedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7742,
                        "src": "2182:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7848,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7847,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7795,
                        "src": "2196:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2182:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7849,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7738,
                        "src": "2203:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7851,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7850,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7841,
                        "src": "2213:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2203:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "src": "2182:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7732_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7853,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7855,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "2235:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7856,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7785,
                        "src": "2239:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7854,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "2230:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7858,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:17:6"
                }
              ]
            },
            "documentation": null,
            "id": 7860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7783,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7860,
                  "src": "1766:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7785,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7860,
                  "src": "1778:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7787,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7860,
                  "src": "1795:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7786,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8457,
                    "src": "1795:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8457_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7791,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7860,
                  "src": "1824:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7788,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1824:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7790,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1829:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1824:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1765:81:6"
            },
            "returnParameters": {
              "id": 7793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:0:6"
            },
            "scope": 7861,
            "src": "1746:515:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7862,
        "src": "334:1931:6"
      }
    ],
    "src": "0:2304:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7861
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7708,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7709,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 1439,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7862,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7710,
        "name": "ImportDirective",
        "src": "68:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 8784,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7862,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7711,
        "name": "ImportDirective",
        "src": "99:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            399,
            465,
            511,
            997,
            1295,
            1405,
            1438,
            7706
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7861,
            1438,
            1405,
            7706,
            1295,
            997,
            511,
            465,
            399
          ],
          "name": "SolnSquareVerifier",
          "scope": 7862
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1438,
                  "type": "contract CustomERC721Token"
                },
                "id": 7712,
                "name": "UserDefinedTypeName",
                "src": "365:17:6"
              }
            ],
            "id": 7713,
            "name": "InheritanceSpecifier",
            "src": "365:17:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7861,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8783,
                  "type": "contract Verifier"
                },
                "id": 7714,
                "name": "UserDefinedTypeName",
                "src": "390:8:6"
              }
            ],
            "id": 7715,
            "name": "VariableDeclaration",
            "src": "390:25:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7861,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierContractAddress",
                      "scope": 7727,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7716,
                        "name": "ElementaryTypeName",
                        "src": "435:7:6"
                      }
                    ],
                    "id": 7717,
                    "name": "VariableDeclaration",
                    "src": "435:31:6"
                  }
                ],
                "id": 7718,
                "name": "ParameterList",
                "src": "434:33:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7719,
                "name": "ParameterList",
                "src": "475:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7715,
                              "type": "contract Verifier",
                              "value": "verifier"
                            },
                            "id": 7720,
                            "name": "Identifier",
                            "src": "485:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8783,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7721,
                                "name": "Identifier",
                                "src": "496:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7717,
                                  "type": "address",
                                  "value": "verifierContractAddress"
                                },
                                "id": 7722,
                                "name": "Identifier",
                                "src": "505:23:6"
                              }
                            ],
                            "id": 7723,
                            "name": "FunctionCall",
                            "src": "496:33:6"
                          }
                        ],
                        "id": 7724,
                        "name": "Assignment",
                        "src": "485:44:6"
                      }
                    ],
                    "id": 7725,
                    "name": "ExpressionStatement",
                    "src": "485:44:6"
                  }
                ],
                "id": 7726,
                "name": "Block",
                "src": "475:61:6"
              }
            ],
            "id": 7727,
            "name": "FunctionDefinition",
            "src": "422:114:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7861,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7728,
                    "name": "ElementaryTypeName",
                    "src": "642:7:6"
                  }
                ],
                "id": 7729,
                "name": "VariableDeclaration",
                "src": "642:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ownerAddress",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7730,
                    "name": "ElementaryTypeName",
                    "src": "665:7:6"
                  }
                ],
                "id": 7731,
                "name": "VariableDeclaration",
                "src": "665:20:6"
              }
            ],
            "id": 7732,
            "name": "StructDefinition",
            "src": "616:76:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionLength",
              "scope": 7861,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7733,
                "name": "ElementaryTypeName",
                "src": "698:7:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7734,
                "name": "Literal",
                "src": "731:1:6"
              }
            ],
            "id": 7735,
            "name": "VariableDeclaration",
            "src": "698:34:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7861,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7732,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7736,
                    "name": "UserDefinedTypeName",
                    "src": "787:8:6"
                  }
                ],
                "id": 7737,
                "name": "ArrayTypeName",
                "src": "787:10:6"
              }
            ],
            "id": 7738,
            "name": "VariableDeclaration",
            "src": "787:28:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "usedSolutions",
              "scope": 7861,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7739,
                    "name": "ElementaryTypeName",
                    "src": "895:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7732,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7740,
                    "name": "UserDefinedTypeName",
                    "src": "906:8:6"
                  }
                ],
                "id": 7741,
                "name": "Mapping",
                "src": "887:28:6"
              }
            ],
            "id": 7742,
            "name": "VariableDeclaration",
            "src": "887:50:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7748,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7743,
                        "name": "ElementaryTypeName",
                        "src": "1025:7:6"
                      }
                    ],
                    "id": 7744,
                    "name": "VariableDeclaration",
                    "src": "1025:7:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7748,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7745,
                        "name": "ElementaryTypeName",
                        "src": "1034:7:6"
                      }
                    ],
                    "id": 7746,
                    "name": "VariableDeclaration",
                    "src": "1034:7:6"
                  }
                ],
                "id": 7747,
                "name": "ParameterList",
                "src": "1024:18:6"
              }
            ],
            "id": 7748,
            "name": "EventDefinition",
            "src": "1005:38:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7861,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solutionAddress",
                      "scope": 7781,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7749,
                        "name": "ElementaryTypeName",
                        "src": "1154:7:6"
                      }
                    ],
                    "id": 7750,
                    "name": "VariableDeclaration",
                    "src": "1154:23:6"
                  }
                ],
                "id": 7751,
                "name": "ParameterList",
                "src": "1153:25:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7781,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7752,
                        "name": "ElementaryTypeName",
                        "src": "1194:7:6"
                      }
                    ],
                    "id": 7753,
                    "name": "VariableDeclaration",
                    "src": "1194:7:6"
                  }
                ],
                "id": 7754,
                "name": "ParameterList",
                "src": "1193:9:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7735,
                              "type": "uint256",
                              "value": "solutionLength"
                            },
                            "id": 7755,
                            "name": "Identifier",
                            "src": "1213:14:6"
                          }
                        ],
                        "id": 7756,
                        "name": "UnaryOperation",
                        "src": "1213:16:6"
                      }
                    ],
                    "id": 7757,
                    "name": "ExpressionStatement",
                    "src": "1213:16:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7759
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSolution",
                          "scope": 7780,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7732,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7758,
                            "name": "UserDefinedTypeName",
                            "src": "1240:8:6"
                          }
                        ],
                        "id": 7759,
                        "name": "VariableDeclaration",
                        "src": "1240:27:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "ownerAddress"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7732,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7760,
                            "name": "Identifier",
                            "src": "1270:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7735,
                              "type": "uint256",
                              "value": "solutionLength"
                            },
                            "id": 7761,
                            "name": "Identifier",
                            "src": "1300:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7750,
                              "type": "address",
                              "value": "solutionAddress"
                            },
                            "id": 7762,
                            "name": "Identifier",
                            "src": "1342:15:6"
                          }
                        ],
                        "id": 7763,
                        "name": "FunctionCall",
                        "src": "1270:98:6"
                      }
                    ],
                    "id": 7764,
                    "name": "VariableDeclarationStatement",
                    "src": "1240:128:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7738,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7765,
                                "name": "Identifier",
                                "src": "1379:9:6"
                              }
                            ],
                            "id": 7767,
                            "name": "MemberAccess",
                            "src": "1379:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7759,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "newSolution"
                            },
                            "id": 7768,
                            "name": "Identifier",
                            "src": "1394:11:6"
                          }
                        ],
                        "id": 7769,
                        "name": "FunctionCall",
                        "src": "1379:27:6"
                      }
                    ],
                    "id": 7770,
                    "name": "ExpressionStatement",
                    "src": "1379:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7748,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7771,
                            "name": "Identifier",
                            "src": "1422:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "index",
                              "referencedDeclaration": 7729,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7759,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "newSolution"
                                },
                                "id": 7772,
                                "name": "Identifier",
                                "src": "1436:11:6"
                              }
                            ],
                            "id": 7773,
                            "name": "MemberAccess",
                            "src": "1436:17:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ownerAddress",
                              "referencedDeclaration": 7731,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7759,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "newSolution"
                                },
                                "id": 7774,
                                "name": "Identifier",
                                "src": "1455:11:6"
                              }
                            ],
                            "id": 7775,
                            "name": "MemberAccess",
                            "src": "1455:24:6"
                          }
                        ],
                        "id": 7776,
                        "name": "FunctionCall",
                        "src": "1422:58:6"
                      }
                    ],
                    "id": 7777,
                    "name": "EmitStatement",
                    "src": "1417:63:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7754
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 7735,
                          "type": "uint256",
                          "value": "solutionLength"
                        },
                        "id": 7778,
                        "name": "Identifier",
                        "src": "1497:14:6"
                      }
                    ],
                    "id": 7779,
                    "name": "Return",
                    "src": "1490:21:6"
                  }
                ],
                "id": 7780,
                "name": "Block",
                "src": "1203:315:6"
              }
            ],
            "id": 7781,
            "name": "FunctionDefinition",
            "src": "1133:385:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNewNFT",
              "scope": 7861,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7860,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7782,
                        "name": "ElementaryTypeName",
                        "src": "1766:7:6"
                      }
                    ],
                    "id": 7783,
                    "name": "VariableDeclaration",
                    "src": "1766:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7860,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7784,
                        "name": "ElementaryTypeName",
                        "src": "1778:7:6"
                      }
                    ],
                    "id": 7785,
                    "name": "VariableDeclaration",
                    "src": "1778:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7860,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8457,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7786,
                        "name": "UserDefinedTypeName",
                        "src": "1795:14:6"
                      }
                    ],
                    "id": 7787,
                    "name": "VariableDeclaration",
                    "src": "1795:27:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 7860,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7788,
                            "name": "ElementaryTypeName",
                            "src": "1824:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7789,
                            "name": "Literal",
                            "src": "1829:1:6"
                          }
                        ],
                        "id": 7790,
                        "name": "ArrayTypeName",
                        "src": "1824:7:6"
                      }
                    ],
                    "id": 7791,
                    "name": "VariableDeclaration",
                    "src": "1824:21:6"
                  }
                ],
                "id": 7792,
                "name": "ParameterList",
                "src": "1765:81:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7793,
                "name": "ParameterList",
                "src": "1858:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7795
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7859,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7794,
                            "name": "ElementaryTypeName",
                            "src": "1868:7:6"
                          }
                        ],
                        "id": 7795,
                        "name": "VariableDeclaration",
                        "src": "1868:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8792,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1882:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8785,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7797,
                                    "name": "Identifier",
                                    "src": "1892:3:6"
                                  }
                                ],
                                "id": 7798,
                                "name": "MemberAccess",
                                "src": "1892:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7866,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8452,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7799,
                                        "name": "Identifier",
                                        "src": "1909:5:6"
                                      }
                                    ],
                                    "id": 7800,
                                    "name": "MemberAccess",
                                    "src": "1909:7:6"
                                  }
                                ],
                                "id": 7801,
                                "name": "MemberAccess",
                                "src": "1909:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7868,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8452,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7802,
                                        "name": "Identifier",
                                        "src": "1920:5:6"
                                      }
                                    ],
                                    "id": 7803,
                                    "name": "MemberAccess",
                                    "src": "1920:7:6"
                                  }
                                ],
                                "id": 7804,
                                "name": "MemberAccess",
                                "src": "1920:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7873,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8454,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7805,
                                        "name": "Identifier",
                                        "src": "1931:5:6"
                                      }
                                    ],
                                    "id": 7806,
                                    "name": "MemberAccess",
                                    "src": "1931:7:6"
                                  }
                                ],
                                "id": 7807,
                                "name": "MemberAccess",
                                "src": "1931:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7877,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8454,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7808,
                                        "name": "Identifier",
                                        "src": "1942:5:6"
                                      }
                                    ],
                                    "id": 7809,
                                    "name": "MemberAccess",
                                    "src": "1942:7:6"
                                  }
                                ],
                                "id": 7810,
                                "name": "MemberAccess",
                                "src": "1942:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7866,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8456,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7811,
                                        "name": "Identifier",
                                        "src": "1953:5:6"
                                      }
                                    ],
                                    "id": 7812,
                                    "name": "MemberAccess",
                                    "src": "1953:7:6"
                                  }
                                ],
                                "id": 7813,
                                "name": "MemberAccess",
                                "src": "1953:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7868,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8456,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7787,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7814,
                                        "name": "Identifier",
                                        "src": "1964:5:6"
                                      }
                                    ],
                                    "id": 7815,
                                    "name": "MemberAccess",
                                    "src": "1964:7:6"
                                  }
                                ],
                                "id": 7816,
                                "name": "MemberAccess",
                                "src": "1964:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7791,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 7817,
                                "name": "Identifier",
                                "src": "1975:6:6"
                              }
                            ],
                            "id": 7818,
                            "name": "FunctionCall",
                            "src": "1892:90:6"
                          }
                        ],
                        "id": 7819,
                        "name": "FunctionCall",
                        "src": "1882:101:6"
                      }
                    ],
                    "id": 7820,
                    "name": "VariableDeclarationStatement",
                    "src": "1868:115:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c7817fb1996c8f7ee4b4579c20e5f772ea6281f01798de350a04377698502f28",
                                  "typeString": "literal_string \"Solution already used.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8801,
                                8802
                              ],
                              "referencedDeclaration": 8802,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7821,
                            "name": "Identifier",
                            "src": "1993:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "index",
                                  "referencedDeclaration": 7729,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7742,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "usedSolutions"
                                        },
                                        "id": 7822,
                                        "name": "Identifier",
                                        "src": "2001:13:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7795,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7823,
                                        "name": "Identifier",
                                        "src": "2015:3:6"
                                      }
                                    ],
                                    "id": 7824,
                                    "name": "IndexAccess",
                                    "src": "2001:18:6"
                                  }
                                ],
                                "id": 7825,
                                "name": "MemberAccess",
                                "src": "2001:24:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7826,
                                "name": "Literal",
                                "src": "2028:1:6"
                              }
                            ],
                            "id": 7827,
                            "name": "BinaryOperation",
                            "src": "2001:28:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c726561647920757365642e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already used.\"",
                              "value": "Solution already used."
                            },
                            "id": 7828,
                            "name": "Literal",
                            "src": "2031:24:6"
                          }
                        ],
                        "id": 7829,
                        "name": "FunctionCall",
                        "src": "1993:63:6"
                      }
                    ],
                    "id": 7830,
                    "name": "ExpressionStatement",
                    "src": "1993:63:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                                  "typeString": "literal_string \"Verification failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8801,
                                8802
                              ],
                              "referencedDeclaration": 8802,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7831,
                            "name": "Identifier",
                            "src": "2066:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8457_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8782,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7715,
                                      "type": "contract Verifier",
                                      "value": "verifier"
                                    },
                                    "id": 7832,
                                    "name": "Identifier",
                                    "src": "2074:8:6"
                                  }
                                ],
                                "id": 7833,
                                "name": "MemberAccess",
                                "src": "2074:17:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7787,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7834,
                                "name": "Identifier",
                                "src": "2092:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7791,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 7835,
                                "name": "Identifier",
                                "src": "2099:6:6"
                              }
                            ],
                            "id": 7836,
                            "name": "FunctionCall",
                            "src": "2074:32:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "566572696669636174696f6e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Verification failed\"",
                              "value": "Verification failed"
                            },
                            "id": 7837,
                            "name": "Literal",
                            "src": "2108:21:6"
                          }
                        ],
                        "id": 7838,
                        "name": "FunctionCall",
                        "src": "2066:64:6"
                      }
                    ],
                    "id": 7839,
                    "name": "ExpressionStatement",
                    "src": "2066:64:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7841
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "index",
                          "scope": 7859,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7840,
                            "name": "ElementaryTypeName",
                            "src": "2141:7:6"
                          }
                        ],
                        "id": 7841,
                        "name": "VariableDeclaration",
                        "src": "2141:13:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7781,
                              "type": "function (address) returns (uint256)",
                              "value": "addSolution"
                            },
                            "id": 7842,
                            "name": "Identifier",
                            "src": "2157:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7783,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7843,
                            "name": "Identifier",
                            "src": "2169:2:6"
                          }
                        ],
                        "id": 7844,
                        "name": "FunctionCall",
                        "src": "2157:15:6"
                      }
                    ],
                    "id": 7845,
                    "name": "VariableDeclarationStatement",
                    "src": "2141:31:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7742,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "usedSolutions"
                                },
                                "id": 7846,
                                "name": "Identifier",
                                "src": "2182:13:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7795,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7847,
                                "name": "Identifier",
                                "src": "2196:3:6"
                              }
                            ],
                            "id": 7848,
                            "name": "IndexAccess",
                            "src": "2182:18:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7738,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7849,
                                "name": "Identifier",
                                "src": "2203:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7841,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 7850,
                                "name": "Identifier",
                                "src": "2213:5:6"
                              }
                            ],
                            "id": 7851,
                            "name": "IndexAccess",
                            "src": "2203:16:6"
                          }
                        ],
                        "id": 7852,
                        "name": "Assignment",
                        "src": "2182:37:6"
                      }
                    ],
                    "id": 7853,
                    "name": "ExpressionStatement",
                    "src": "2182:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1437,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7854,
                            "name": "Identifier",
                            "src": "2230:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7783,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7855,
                            "name": "Identifier",
                            "src": "2235:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7785,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7856,
                            "name": "Identifier",
                            "src": "2239:7:6"
                          }
                        ],
                        "id": 7857,
                        "name": "FunctionCall",
                        "src": "2230:17:6"
                      }
                    ],
                    "id": 7858,
                    "name": "ExpressionStatement",
                    "src": "2230:17:6"
                  }
                ],
                "id": 7859,
                "name": "Block",
                "src": "1858:403:6"
              }
            ],
            "id": 7860,
            "name": "FunctionDefinition",
            "src": "1746:515:6"
          }
        ],
        "id": 7861,
        "name": "ContractDefinition",
        "src": "334:1931:6"
      }
    ],
    "id": 7862,
    "name": "SourceUnit",
    "src": "0:2304:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-18T21:46:16.268Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}