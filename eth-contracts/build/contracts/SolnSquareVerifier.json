{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierContractAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "solutionAddress",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierContractAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"solutionAddress\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd21e6e573bac014e1a8675f271367ab7d481851584a30cdd7f4b9587f80658f1\",\"urls\":[\"bzz-raw://59d7e9b76f3e92f38225b8bab5149ead0c057dc91a6d6c7caa0ff4b9a46ef8d5\",\"dweb:/ipfs/Qmdg7b1fJxkJZJoNWJtxjkYVepadGvn3TU1Mc1E7zY4A8J\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x976f506a56bdff376c62337107535a0a7da85e38a282e0bd3f4e57fab1d9bc5f\",\"urls\":[\"bzz-raw://8a5934053681f0f38cbb1e8e58bfa7a75fb2f216eeb9e670f5a4af73038b27f5\",\"dweb:/ipfs/QmQAV8oi1stC4fJ4xGKoyox387Y8Kqg1czJzQChZsPvyDK\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x5260046977dd5d2bb16dce04810d4de6d465aab34be1bd3b851aa842e37baffd\",\"urls\":[\"bzz-raw://b69005df8043075d6418207e356e0e6f719ef93d02ba0cc47c33a1fa458587cb\",\"dweb:/ipfs/QmTwKykakCNdYyib9qQRHH81PJ9TmHB9uWEAoANyBgKSTz\"]}},\"version\":1}",
  "bytecode": "0x608060405260006014553480156200001657600080fd5b50604051620034fb380380620034fb83398181016040526200003c9190810190620003d2565b6040518060400160405280600a81526020017f4d494e484f434f494e53000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4e4300000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f8152602001620034bc603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200015491906200040f565b60405180910390a160008060146101000a81548160ff0219169083151502179055506200018e6301ffc9a760e01b6200026c60201b60201c565b620001a66380ac58cd60e01b6200026c60201b60201c565b620001be63780e9d6360e01b6200026c60201b60201c565b82600f9080519060200190620001d69291906200030c565b508160109080519060200190620001ef9291906200030c565b508060119080519060200190620002089291906200030c565b5062000221635b5e139f60e01b6200026c60201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200047a565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002a057600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034f57805160ff191683800117855562000380565b8280016001018555821562000380579182015b828111156200037f57825182559160200191906001019062000362565b5b5090506200038f919062000393565b5090565b620003b891905b80821115620003b45760008160009055506001016200039a565b5090565b90565b600081519050620003cc8162000460565b92915050565b600060208284031215620003e557600080fd5b6000620003f584828501620003bb565b91505092915050565b62000409816200042c565b82525050565b6000602082019050620004266000830184620003fe565b92915050565b6000620004398262000440565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200046b816200042c565b81146200047757600080fd5b50565b613032806200048a6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063b88d4fde1161007c578063b88d4fde146103fd578063bdc32be014610419578063bedb86fb14610437578063c87b56dd14610453578063e985e9c514610483578063f2fde38b146104b357610158565b80634f6ccce7146103035780636352211e1461033357806370a0823114610363578063832e169514610393578063893d20e8146103c3578063a22cb465146103e157610158565b806323b872dd1161011557806323b872dd1461023357806327dc297e1461024f5780632f745c591461026b57806338bbfa501461029b57806340c10f19146102b757806342842e0e146102e757610158565b806301ffc9a71461015d578063081812fc1461018d578063095ea7b3146101bd57806315070401146101d957806317d7de7c146101f757806318160ddd14610215575b600080fd5b61017760048036036101729190810190612794565b6104cf565b6040516101849190612c17565b60405180910390f35b6101a760048036036101a291908101906127e6565b610537565b6040516101b49190612b95565b60405180910390f35b6101d760048036036101d2919081019061265c565b610574565b005b6101e161075d565b6040516101ee9190612c32565b60405180910390f35b6101ff6107ff565b60405161020c9190612c32565b60405180910390f35b61021d6108a1565b60405161022a9190612d74565b60405180910390f35b61024d60048036036102489190810190612556565b6108ae565b005b610269600480360361026491908101906126c1565b6108d1565b005b6102856004803603610280919081019061265c565b610914565b6040516102929190612d74565b60405180910390f35b6102b560048036036102b09190810190612715565b610987565b005b6102d160048036036102cc919081019061265c565b61098c565b6040516102de9190612c17565b60405180910390f35b61030160048036036102fc9190810190612556565b610a3a565b005b61031d600480360361031891908101906127e6565b610a5a565b60405161032a9190612d74565b60405180910390f35b61034d600480360361034891908101906127e6565b610a8e565b60405161035a9190612b95565b60405180910390f35b61037d600480360361037891908101906124f1565b610acb565b60405161038a9190612d74565b60405180910390f35b6103ad60048036036103a891908101906124f1565b610b1b565b6040516103ba9190612d74565b60405180910390f35b6103cb610c34565b6040516103d89190612b95565b60405180910390f35b6103fb60048036036103f69190810190612620565b610c5d565b005b610417600480360361041291908101906125a5565b610d93565b005b610421610db9565b60405161042e9190612c32565b60405180910390f35b610451600480360361044c9190810190612698565b610e5b565b005b61046d600480360361046891908101906127e6565b610f90565b60405161047a9190612c32565b60405180910390f35b61049d6004803603610498919081019061251a565b611057565b6040516104aa9190612c17565b60405180910390f35b6104cd60048036036104c891908101906124f1565b6110eb565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90612cd4565b60405180910390fd5b6105eb610c34565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061062a57506106293383611057565b5b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090612d54565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b6000600880549050905090565b6108b83382611264565b6108c157600080fd5b6108cc8383836112f9565b505050565b610910828260006040519080825280601f01601f19166020018201604052801561090a5781602001600182028038833980820191505090505b50610987565b5050565b600061091f83610acb565b821061092a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061097457fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490612d14565b60405180910390fd5b610a27838361131d565b610a308261133e565b6001905092915050565b610a5583838360405180602001604052806000815250610d93565b505050565b6000610a646108a1565b8210610a6f57600080fd5b60088281548110610a7c57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b14600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061145c565b9050919050565b6000601460008154809291906001019190505550610b376122ca565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d81600001518260200151604051610c21929190612d8f565b60405180910390a1601454915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9657600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d879190612c17565b60405180910390a35050565b610d9e8484846108ae565b610daa8484848461146a565b610db357600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e515780601f10610e2657610100808354040283529160200191610e51565b820191906000526020600020905b815481529060010190602001808311610e3457829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee190612d14565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610f55577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610f489190612bb0565b60405180910390a1610f8d565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610f849190612bb0565b60405180910390a15b50565b6060610f9b82611581565b610fa457600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190612d14565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156111ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e190612c74565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516112599190612b95565b60405180910390a150565b60008061127083610a8e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112df57508373ffffffffffffffffffffffffffffffffffffffff166112c784610537565b73ffffffffffffffffffffffffffffffffffffffff16145b806112f057506112ef8185611057565b5b91505092915050565b6113048383836115f3565b61130e838261184d565b61131882826119eb565b505050565b6113278282611ab2565b61133182826119eb565b61133a81611c64565b5050565b61134781611581565b611386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137d90612d34565b60405180910390fd5b61143260118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561141f5780601f106113f45761010080835404028352916020019161141f565b820191906000526020600020905b81548152906001019060200180831161140257829003601f168201915b505050505061142d83611cb0565b611ddd565b6012600083815260200190815260200160002090805190602001906114589291906122fa565b5050565b600081600001549050919050565b600061148b8473ffffffffffffffffffffffffffffffffffffffff16611e21565b6114985760019050611579565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114d99493929190612bcb565b602060405180830381600087803b1580156114f357600080fd5b505af1158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061152b91908101906127bd565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168b90612cb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fb90612cf4565b60405180910390fd5b61170d81611e6c565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a6600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f2a565b6117ed600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f4d565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006118a56001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611f6390919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611992576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061191257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061196a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119e4919061237a565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611abb81611581565b15611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612c94565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6290612c54565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c04600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f4d565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611cf8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611dd8565b600082905060005b60008214611d22578080600101915050600a8281611d1a57fe5b049150611d00565b6060816040519080825280601f01601f191660200182016040528015611d575781602001600182028038833980820191505090505b50905060006001830390505b60008614611dd057600a8681611d7557fe5b0660300160f81b82828060019003935081518110611d8f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611dc857fe5b049550611d63565b819450505050505b919050565b6060611e198383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611fad565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611e6357506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f275760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611f4260018260000154611f6390919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611fa583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061226f565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156120095781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561208e5788818151811061203557fe5b602001015160f81c60f81b83838060010194508151811061205257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612020565b600090505b8751811015612101578781815181106120a857fe5b602001015160f81c60f81b8383806001019450815181106120c557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612093565b600090505b86518110156121745786818151811061211b57fe5b602001015160f81c60f81b83838060010194508151811061213857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612106565b600090505b85518110156121e75785818151811061218e57fe5b602001015160f81c60f81b8383806001019450815181106121ab57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612179565b600090505b845181101561225a5784818151811061220157fe5b602001015160f81c60f81b83838060010194508151811061221e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121ec565b82995050505050505050505095945050505050565b60008383111582906122b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ae9190612c32565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061233b57805160ff1916838001178555612369565b82800160010185558215612369579182015b8281111561236857825182559160200191906001019061234d565b5b50905061237691906123a6565b5090565b8154818355818111156123a1578183600052602060002091820191016123a091906123a6565b5b505050565b6123c891905b808211156123c45760008160009055506001016123ac565b5090565b90565b6000813590506123da81612f7c565b92915050565b6000813590506123ef81612f93565b92915050565b60008135905061240481612faa565b92915050565b60008135905061241981612fc1565b92915050565b60008151905061242e81612fc1565b92915050565b600082601f83011261244557600080fd5b813561245861245382612de5565b612db8565b9150808252602083016020830185838301111561247457600080fd5b61247f838284612f29565b50505092915050565b600082601f83011261249957600080fd5b81356124ac6124a782612e11565b612db8565b915080825260208301602083018583830111156124c857600080fd5b6124d3838284612f29565b50505092915050565b6000813590506124eb81612fd8565b92915050565b60006020828403121561250357600080fd5b6000612511848285016123cb565b91505092915050565b6000806040838503121561252d57600080fd5b600061253b858286016123cb565b925050602061254c858286016123cb565b9150509250929050565b60008060006060848603121561256b57600080fd5b6000612579868287016123cb565b935050602061258a868287016123cb565b925050604061259b868287016124dc565b9150509250925092565b600080600080608085870312156125bb57600080fd5b60006125c9878288016123cb565b94505060206125da878288016123cb565b93505060406125eb878288016124dc565b925050606085013567ffffffffffffffff81111561260857600080fd5b61261487828801612434565b91505092959194509250565b6000806040838503121561263357600080fd5b6000612641858286016123cb565b9250506020612652858286016123e0565b9150509250929050565b6000806040838503121561266f57600080fd5b600061267d858286016123cb565b925050602061268e858286016124dc565b9150509250929050565b6000602082840312156126aa57600080fd5b60006126b8848285016123e0565b91505092915050565b600080604083850312156126d457600080fd5b60006126e2858286016123f5565b925050602083013567ffffffffffffffff8111156126ff57600080fd5b61270b85828601612488565b9150509250929050565b60008060006060848603121561272a57600080fd5b6000612738868287016123f5565b935050602084013567ffffffffffffffff81111561275557600080fd5b61276186828701612488565b925050604084013567ffffffffffffffff81111561277e57600080fd5b61278a86828701612434565b9150509250925092565b6000602082840312156127a657600080fd5b60006127b48482850161240a565b91505092915050565b6000602082840312156127cf57600080fd5b60006127dd8482850161241f565b91505092915050565b6000602082840312156127f857600080fd5b6000612806848285016124dc565b91505092915050565b61281881612ef3565b82525050565b61282781612e75565b82525050565b61283681612e87565b82525050565b600061284782612e3d565b6128518185612e53565b9350612861818560208601612f38565b61286a81612f6b565b840191505092915050565b600061288082612e48565b61288a8185612e64565b935061289a818560208601612f38565b6128a381612f6b565b840191505092915050565b60006128bb600f83612e64565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b60006128fb601b83612e64565b91507f43616c6c65722061646472657373206d757374206265207265616c00000000006000830152602082019050919050565b600061293b601483612e64565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b600061297b602583612e64565b91507f546f6b656e20646f6573206e6f742062656c6f6e6720746f2066726f6d20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129e1602b83612e64565b91507f446f206e6f74206e65656420746f2067697665207065726d697373696f6e206660008301527f6f72207468656d73656c660000000000000000000000000000000000000000006020830152604082019050919050565b6000612a47601583612e64565b91507f4164647265737320746f20697320696e76616c696400000000000000000000006000830152602082019050919050565b6000612a87601c83612e64565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000612ac7601683612e64565b91507f546f6b656e496420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b6000612b07604a83612e64565b91507f53656e646572206973206e6f742074686520636f6e7472616374206f776e657260008301527f20616e64206f70657261746f72206973417070726f766564466f72416c6c206960208301527f73206e6f742074727565000000000000000000000000000000000000000000006040830152606082019050919050565b612b8f81612ee9565b82525050565b6000602082019050612baa600083018461281e565b92915050565b6000602082019050612bc5600083018461280f565b92915050565b6000608082019050612be0600083018761280f565b612bed602083018661281e565b612bfa6040830185612b86565b8181036060830152612c0c818461283c565b905095945050505050565b6000602082019050612c2c600083018461282d565b92915050565b60006020820190508181036000830152612c4c8184612875565b905092915050565b60006020820190508181036000830152612c6d816128ae565b9050919050565b60006020820190508181036000830152612c8d816128ee565b9050919050565b60006020820190508181036000830152612cad8161292e565b9050919050565b60006020820190508181036000830152612ccd8161296e565b9050919050565b60006020820190508181036000830152612ced816129d4565b9050919050565b60006020820190508181036000830152612d0d81612a3a565b9050919050565b60006020820190508181036000830152612d2d81612a7a565b9050919050565b60006020820190508181036000830152612d4d81612aba565b9050919050565b60006020820190508181036000830152612d6d81612afa565b9050919050565b6000602082019050612d896000830184612b86565b92915050565b6000604082019050612da46000830185612b86565b612db1602083018461281e565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715612ddb57600080fd5b8060405250919050565b600067ffffffffffffffff821115612dfc57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612e2857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612e8082612ec9565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612efe82612f05565b9050919050565b6000612f1082612f17565b9050919050565b6000612f2282612ec9565b9050919050565b82818337600083830152505050565b60005b83811015612f56578082015181840152602081019050612f3b565b83811115612f65576000848401525b50505050565b6000601f19601f8301169050919050565b612f8581612e75565b8114612f9057600080fd5b50565b612f9c81612e87565b8114612fa757600080fd5b50565b612fb381612e93565b8114612fbe57600080fd5b50565b612fca81612e9d565b8114612fd557600080fd5b50565b612fe181612ee9565b8114612fec57600080fd5b5056fea365627a7a723158206e50df704e314b57f338a02e1668249b1f8f327aca9ae1f16a863436ae8b12676c6578706572696d656e74616cf564736f6c6343000511004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063b88d4fde1161007c578063b88d4fde146103fd578063bdc32be014610419578063bedb86fb14610437578063c87b56dd14610453578063e985e9c514610483578063f2fde38b146104b357610158565b80634f6ccce7146103035780636352211e1461033357806370a0823114610363578063832e169514610393578063893d20e8146103c3578063a22cb465146103e157610158565b806323b872dd1161011557806323b872dd1461023357806327dc297e1461024f5780632f745c591461026b57806338bbfa501461029b57806340c10f19146102b757806342842e0e146102e757610158565b806301ffc9a71461015d578063081812fc1461018d578063095ea7b3146101bd57806315070401146101d957806317d7de7c146101f757806318160ddd14610215575b600080fd5b61017760048036036101729190810190612794565b6104cf565b6040516101849190612c17565b60405180910390f35b6101a760048036036101a291908101906127e6565b610537565b6040516101b49190612b95565b60405180910390f35b6101d760048036036101d2919081019061265c565b610574565b005b6101e161075d565b6040516101ee9190612c32565b60405180910390f35b6101ff6107ff565b60405161020c9190612c32565b60405180910390f35b61021d6108a1565b60405161022a9190612d74565b60405180910390f35b61024d60048036036102489190810190612556565b6108ae565b005b610269600480360361026491908101906126c1565b6108d1565b005b6102856004803603610280919081019061265c565b610914565b6040516102929190612d74565b60405180910390f35b6102b560048036036102b09190810190612715565b610987565b005b6102d160048036036102cc919081019061265c565b61098c565b6040516102de9190612c17565b60405180910390f35b61030160048036036102fc9190810190612556565b610a3a565b005b61031d600480360361031891908101906127e6565b610a5a565b60405161032a9190612d74565b60405180910390f35b61034d600480360361034891908101906127e6565b610a8e565b60405161035a9190612b95565b60405180910390f35b61037d600480360361037891908101906124f1565b610acb565b60405161038a9190612d74565b60405180910390f35b6103ad60048036036103a891908101906124f1565b610b1b565b6040516103ba9190612d74565b60405180910390f35b6103cb610c34565b6040516103d89190612b95565b60405180910390f35b6103fb60048036036103f69190810190612620565b610c5d565b005b610417600480360361041291908101906125a5565b610d93565b005b610421610db9565b60405161042e9190612c32565b60405180910390f35b610451600480360361044c9190810190612698565b610e5b565b005b61046d600480360361046891908101906127e6565b610f90565b60405161047a9190612c32565b60405180910390f35b61049d6004803603610498919081019061251a565b611057565b6040516104aa9190612c17565b60405180910390f35b6104cd60048036036104c891908101906124f1565b6110eb565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90612cd4565b60405180910390fd5b6105eb610c34565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061062a57506106293383611057565b5b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090612d54565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b6000600880549050905090565b6108b83382611264565b6108c157600080fd5b6108cc8383836112f9565b505050565b610910828260006040519080825280601f01601f19166020018201604052801561090a5781602001600182028038833980820191505090505b50610987565b5050565b600061091f83610acb565b821061092a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061097457fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490612d14565b60405180910390fd5b610a27838361131d565b610a308261133e565b6001905092915050565b610a5583838360405180602001604052806000815250610d93565b505050565b6000610a646108a1565b8210610a6f57600080fd5b60088281548110610a7c57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b14600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061145c565b9050919050565b6000601460008154809291906001019190505550610b376122ca565b604051806040016040528060145481526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d81600001518260200151604051610c21929190612d8f565b60405180910390a1601454915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9657600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d879190612c17565b60405180910390a35050565b610d9e8484846108ae565b610daa8484848461146a565b610db357600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e515780601f10610e2657610100808354040283529160200191610e51565b820191906000526020600020905b815481529060010190602001808311610e3457829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee190612d14565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610f55577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610f489190612bb0565b60405180910390a1610f8d565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610f849190612bb0565b60405180910390a15b50565b6060610f9b82611581565b610fa457600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190612d14565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156111ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e190612c74565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516112599190612b95565b60405180910390a150565b60008061127083610a8e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112df57508373ffffffffffffffffffffffffffffffffffffffff166112c784610537565b73ffffffffffffffffffffffffffffffffffffffff16145b806112f057506112ef8185611057565b5b91505092915050565b6113048383836115f3565b61130e838261184d565b61131882826119eb565b505050565b6113278282611ab2565b61133182826119eb565b61133a81611c64565b5050565b61134781611581565b611386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137d90612d34565b60405180910390fd5b61143260118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561141f5780601f106113f45761010080835404028352916020019161141f565b820191906000526020600020905b81548152906001019060200180831161140257829003601f168201915b505050505061142d83611cb0565b611ddd565b6012600083815260200190815260200160002090805190602001906114589291906122fa565b5050565b600081600001549050919050565b600061148b8473ffffffffffffffffffffffffffffffffffffffff16611e21565b6114985760019050611579565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016114d99493929190612bcb565b602060405180830381600087803b1580156114f357600080fd5b505af1158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061152b91908101906127bd565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168b90612cb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fb90612cf4565b60405180910390fd5b61170d81611e6c565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a6600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f2a565b6117ed600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f4d565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006118a56001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611f6390919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611992576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061191257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061196a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119e4919061237a565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611abb81611581565b15611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612c94565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6290612c54565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c04600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611f4d565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611cf8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611dd8565b600082905060005b60008214611d22578080600101915050600a8281611d1a57fe5b049150611d00565b6060816040519080825280601f01601f191660200182016040528015611d575781602001600182028038833980820191505090505b50905060006001830390505b60008614611dd057600a8681611d7557fe5b0660300160f81b82828060019003935081518110611d8f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611dc857fe5b049550611d63565b819450505050505b919050565b6060611e198383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611fad565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611e6357506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f275760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611f4260018260000154611f6390919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000611fa583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061226f565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156120095781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561208e5788818151811061203557fe5b602001015160f81c60f81b83838060010194508151811061205257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612020565b600090505b8751811015612101578781815181106120a857fe5b602001015160f81c60f81b8383806001019450815181106120c557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612093565b600090505b86518110156121745786818151811061211b57fe5b602001015160f81c60f81b83838060010194508151811061213857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612106565b600090505b85518110156121e75785818151811061218e57fe5b602001015160f81c60f81b8383806001019450815181106121ab57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612179565b600090505b845181101561225a5784818151811061220157fe5b602001015160f81c60f81b83838060010194508151811061221e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121ec565b82995050505050505050505095945050505050565b60008383111582906122b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ae9190612c32565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061233b57805160ff1916838001178555612369565b82800160010185558215612369579182015b8281111561236857825182559160200191906001019061234d565b5b50905061237691906123a6565b5090565b8154818355818111156123a1578183600052602060002091820191016123a091906123a6565b5b505050565b6123c891905b808211156123c45760008160009055506001016123ac565b5090565b90565b6000813590506123da81612f7c565b92915050565b6000813590506123ef81612f93565b92915050565b60008135905061240481612faa565b92915050565b60008135905061241981612fc1565b92915050565b60008151905061242e81612fc1565b92915050565b600082601f83011261244557600080fd5b813561245861245382612de5565b612db8565b9150808252602083016020830185838301111561247457600080fd5b61247f838284612f29565b50505092915050565b600082601f83011261249957600080fd5b81356124ac6124a782612e11565b612db8565b915080825260208301602083018583830111156124c857600080fd5b6124d3838284612f29565b50505092915050565b6000813590506124eb81612fd8565b92915050565b60006020828403121561250357600080fd5b6000612511848285016123cb565b91505092915050565b6000806040838503121561252d57600080fd5b600061253b858286016123cb565b925050602061254c858286016123cb565b9150509250929050565b60008060006060848603121561256b57600080fd5b6000612579868287016123cb565b935050602061258a868287016123cb565b925050604061259b868287016124dc565b9150509250925092565b600080600080608085870312156125bb57600080fd5b60006125c9878288016123cb565b94505060206125da878288016123cb565b93505060406125eb878288016124dc565b925050606085013567ffffffffffffffff81111561260857600080fd5b61261487828801612434565b91505092959194509250565b6000806040838503121561263357600080fd5b6000612641858286016123cb565b9250506020612652858286016123e0565b9150509250929050565b6000806040838503121561266f57600080fd5b600061267d858286016123cb565b925050602061268e858286016124dc565b9150509250929050565b6000602082840312156126aa57600080fd5b60006126b8848285016123e0565b91505092915050565b600080604083850312156126d457600080fd5b60006126e2858286016123f5565b925050602083013567ffffffffffffffff8111156126ff57600080fd5b61270b85828601612488565b9150509250929050565b60008060006060848603121561272a57600080fd5b6000612738868287016123f5565b935050602084013567ffffffffffffffff81111561275557600080fd5b61276186828701612488565b925050604084013567ffffffffffffffff81111561277e57600080fd5b61278a86828701612434565b9150509250925092565b6000602082840312156127a657600080fd5b60006127b48482850161240a565b91505092915050565b6000602082840312156127cf57600080fd5b60006127dd8482850161241f565b91505092915050565b6000602082840312156127f857600080fd5b6000612806848285016124dc565b91505092915050565b61281881612ef3565b82525050565b61282781612e75565b82525050565b61283681612e87565b82525050565b600061284782612e3d565b6128518185612e53565b9350612861818560208601612f38565b61286a81612f6b565b840191505092915050565b600061288082612e48565b61288a8185612e64565b935061289a818560208601612f38565b6128a381612f6b565b840191505092915050565b60006128bb600f83612e64565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b60006128fb601b83612e64565b91507f43616c6c65722061646472657373206d757374206265207265616c00000000006000830152602082019050919050565b600061293b601483612e64565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b600061297b602583612e64565b91507f546f6b656e20646f6573206e6f742062656c6f6e6720746f2066726f6d20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129e1602b83612e64565b91507f446f206e6f74206e65656420746f2067697665207065726d697373696f6e206660008301527f6f72207468656d73656c660000000000000000000000000000000000000000006020830152604082019050919050565b6000612a47601583612e64565b91507f4164647265737320746f20697320696e76616c696400000000000000000000006000830152602082019050919050565b6000612a87601c83612e64565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000612ac7601683612e64565b91507f546f6b656e496420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b6000612b07604a83612e64565b91507f53656e646572206973206e6f742074686520636f6e7472616374206f776e657260008301527f20616e64206f70657261746f72206973417070726f766564466f72416c6c206960208301527f73206e6f742074727565000000000000000000000000000000000000000000006040830152606082019050919050565b612b8f81612ee9565b82525050565b6000602082019050612baa600083018461281e565b92915050565b6000602082019050612bc5600083018461280f565b92915050565b6000608082019050612be0600083018761280f565b612bed602083018661281e565b612bfa6040830185612b86565b8181036060830152612c0c818461283c565b905095945050505050565b6000602082019050612c2c600083018461282d565b92915050565b60006020820190508181036000830152612c4c8184612875565b905092915050565b60006020820190508181036000830152612c6d816128ae565b9050919050565b60006020820190508181036000830152612c8d816128ee565b9050919050565b60006020820190508181036000830152612cad8161292e565b9050919050565b60006020820190508181036000830152612ccd8161296e565b9050919050565b60006020820190508181036000830152612ced816129d4565b9050919050565b60006020820190508181036000830152612d0d81612a3a565b9050919050565b60006020820190508181036000830152612d2d81612a7a565b9050919050565b60006020820190508181036000830152612d4d81612aba565b9050919050565b60006020820190508181036000830152612d6d81612afa565b9050919050565b6000602082019050612d896000830184612b86565b92915050565b6000604082019050612da46000830185612b86565b612db1602083018461281e565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715612ddb57600080fd5b8060405250919050565b600067ffffffffffffffff821115612dfc57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612e2857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612e8082612ec9565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612efe82612f05565b9050919050565b6000612f1082612f17565b9050919050565b6000612f2282612ec9565b9050919050565b82818337600083830152505050565b60005b83811015612f56578082015181840152602081019050612f3b565b83811115612f65576000848401525b50505050565b6000601f19601f8301169050919050565b612f8581612e75565b8114612f9057600080fd5b50565b612f9c81612e87565b8114612fa757600080fd5b50565b612fb381612e93565b8114612fbe57600080fd5b50565b612fca81612e9d565b8114612fd557600080fd5b50565b612fe181612ee9565b8114612fec57600080fd5b5056fea365627a7a723158206e50df704e314b57f338a02e1668249b1f8f327aca9ae1f16a863436ae8b12676c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "334:1885:6:-;;;731:1;698:34;;422:114;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:114:6;;;;;;;;;;;;;;;;;;;;;;;;20076:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:10;686:6;;:19;;;;;;;;;;;;;;;;;;720:27;740:6;;;;;;;;;;;720:27;;;;;;;;;;;;;;;2143:5;2133:7;;:15;;;;;;;;;;;;;;;;;;3088:40;2685:10;3107:20;;3088:18;;;:40;;:::i;:::-;5234;5108:10;5253:20;;5234:18;;;:40;;:::i;:::-;12777:51;12383:10;12796:31;;12777:18;;;:51;;:::i;:::-;20225:4;20217:5;:12;;;;;;;;;;;;:::i;:::-;;20249:6;20239:7;:16;;;;;;;;;;;;:::i;:::-;;20281:12;20265:13;:28;;;;;;;;;;;;:::i;:::-;;20304:49;19887:10;20323:29;;20304:18;;;:49;;:::i;:::-;20076:284;;;505:23:6;485:8;;:44;;;;;;;;;;;;;;;;;;422:114;334:1885;;3438:158:4;3528:10;3513:25;;:11;:25;;;;;3505:34;;;;;;3585:4;3549:20;:33;3570:11;3549:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3438:158;:::o;334:1885:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;416:113;499:24;517:5;499:24;;;494:3;487:37;481:48;;;536:213;;654:2;643:9;639:18;631:26;;668:71;736:1;725:9;721:17;712:6;668:71;;;625:124;;;;;756:91;;818:24;836:5;818:24;;;807:35;;801:46;;;;854:121;;927:42;920:5;916:54;905:65;;899:76;;;;982:117;1051:24;1069:5;1051:24;;;1044:5;1041:35;1031:2;;1090:1;1087;1080:12;1031:2;1025:74;;334:1885:6;;;;;;;",
  "deployedSourceMap": "334:1885:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:1885:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6489:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5813:670;;;;;;;;;;;;;;;;:::i;:::-;;20539:90;;;:::i;:::-;;;;;;;;;;;;;;;;20447:86;;;:::i;:::-;;;;;;;;;;;;;;;;13542:94;;;:::i;:::-;;;;;;;;;;;;;;;;7633:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;13208:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;22340:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7819:132;;;;;;;;;;;;;;;;:::i;:::-;;13973:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5578:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5287:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1133:385:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;467:80:4;;;:::i;:::-;;;;;;;;;;;;;;;;6948:213;;;;;;;;;;;;;;;;:::i;:::-;;7957:211;;;;;;;;;;;;;;;;:::i;:::-;;20635:102;;;:::i;:::-;;;;;;;;;;;;;;;;1805:210;;;;;;;;;;;;;;;;:::i;:::-;;20743:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7482:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1179:354;;;;;;;;;;;;;;;;:::i;:::-;;3226:133;3296:4;3319:20;:33;3340:11;3319:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3312:40;;3226:133;;;:::o;6489:167::-;6548:7;6625:15;:24;6641:7;6625:24;;;;;;;;;;;;;;;;;;;;;6618:31;;6489:167;;;:::o;5813:670::-;5975:2;5961:16;;:10;:16;;;;5953:72;;;;;;;;;;;;;;;;;;;;;;6162:10;:8;:10::i;:::-;6148:24;;:10;:24;;;:60;;;;6176:32;6193:10;6205:2;6176:16;:32::i;:::-;6148:60;6140:147;;;;;;;;;;;;;;;;;;;;;;6387:4;6350:18;:30;6369:10;6350:30;;;;;;;;;;;;;;;:34;6381:2;6350:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;6468:7;6464:2;6443:33;;6452:10;6443:33;;;;;;;;;;;;5813:670;;:::o;20539:90::-;20583:13;20615:7;20608:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20539:90;:::o;20447:86::-;20489:13;20521:5;20514:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20447:86;:::o;13542:94::-;13586:7;13612:10;:17;;;;13605:24;;13542:94;:::o;7633:180::-;7723:39;7742:10;7754:7;7723:18;:39::i;:::-;7715:48;;;;;;7774:32;7788:4;7794:2;7798:7;7774:13;:32::i;:::-;7633:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13208:182:4:-;13288:7;13323:16;13333:5;13323:9;:16::i;:::-;13315:5;:24;13307:33;;;;;;13357:12;:19;13370:5;13357:19;;;;;;;;;;;;;;;13377:5;13357:26;;;;;;;;;;;;;;;;13350:33;;13208:182;;;;:::o;14929:166:5:-;;;;:::o;22340:182:4:-;22417:4;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;22432:24;22444:2;22448:7;22432:11;:24::i;:::-;22466:27;22485:7;22466:18;:27::i;:::-;22511:4;22504:11;;22340:182;;;;:::o;7819:132::-;7905:39;7922:4;7928:2;7932:7;7905:39;;;;;;;;;;;;:16;:39::i;:::-;7819:132;;;:::o;13973:148::-;14031:7;14066:13;:11;:13::i;:::-;14058:5;:21;14050:30;;;;;;14097:10;14108:5;14097:17;;;;;;;;;;;;;;;;14090:24;;13973:148;;;:::o;5578:162::-;5633:7;5713:11;:20;5725:7;5713:20;;;;;;;;;;;;;;;;;;;;;5706:27;;5578:162;;;:::o;5287:285::-;5342:7;5531:34;:17;:24;5549:5;5531:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5524:41;;5287:285;;;:::o;1133:385:6:-;1194:7;1213:14;;:16;;;;;;;;;;;;;1240:27;;:::i;:::-;1270:98;;;;;;;;1300:14;;1270:98;;;;1342:15;1270:98;;;;;1240:128;;1379:9;1394:11;1379:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1379:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:58;1436:11;:17;;;1455:11;:24;;;1422:58;;;;;;;;;;;;;;;;1497:14;;1490:21;;;1133:385;;;:::o;467:80:4:-;508:7;534:6;;;;;;;;;;;527:13;;467:80;:::o;6948:213::-;7033:10;7027:16;;:2;:16;;;;7019:25;;;;;;7091:8;7054:18;:30;7073:10;7054:30;;;;;;;;;;;;;;;:34;7085:2;7054:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7141:2;7114:40;;7129:10;7114:40;;;7145:8;7114:40;;;;;;;;;;;;;;;6948:213;;:::o;7957:211::-;8063:31;8076:4;8082:2;8086:7;8063:12;:31::i;:::-;8112:48;8135:4;8141:2;8145:7;8154:5;8112:22;:48::i;:::-;8104:57;;;;;;7957:211;;;;:::o;20635:102::-;20685:13;20717;20710:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20635:102;:::o;1805:210::-;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;1877:5;1867:7;;:15;;;;;;;;;;;;;;;;;;1896:7;;;;;;;;;;;1892:117;;;1924:18;1931:10;1924:18;;;;;;;;;;;;;;;1892:117;;;1978:20;1987:10;1978:20;;;;;;;;;;;;;;;1892:117;1805:210;:::o;20743:151::-;20801:13;20834:16;20842:7;20834;:16::i;:::-;20826:25;;;;;;20868:10;:19;20879:7;20868:19;;;;;;;;;;;20861:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20743:151;;;:::o;7482:145::-;7562:4;7585:18;:25;7604:5;7585:25;;;;;;;;;;;;;;;:35;7611:8;7585:35;;;;;;;;;;;;;;;;;;;;;;;;;7578:42;;7482:145;;;;:::o;1179:354::-;914:6;;;;;;;;;;;900:20;;:10;:20;;;892:61;;;;;;;;;;;;;;;;;;;;;;1419:1;1397:24;;:10;:24;;;;1389:64;;;;;;;;;;;;;;;;;;;;;;1473:8;1464:6;;:17;;;;;;;;;;;;;;;;;;1496:29;1516:8;1496:29;;;;;;;;;;;;;;;1179:354;:::o;8874:246::-;8959:4;8975:13;8991:16;8999:7;8991;:16::i;:::-;8975:32;;9036:5;9025:16;;:7;:16;;;:51;;;;9069:7;9045:31;;:20;9057:7;9045:11;:20::i;:::-;:31;;;9025:51;:87;;;;9080:32;9097:5;9104:7;9080:16;:32::i;:::-;9025:87;9017:96;;;8874:246;;;;:::o;14496:239::-;14581:38;14601:4;14607:2;14611:7;14581:19;:38::i;:::-;14630:47;14663:4;14669:7;14630:32;:47::i;:::-;14688:40;14716:2;14720:7;14688:27;:40::i;:::-;14496:239;;;:::o;14990:196::-;15053:24;15065:2;15069:7;15053:11;:24::i;:::-;15088:40;15116:2;15120:7;15088:27;:40::i;:::-;15139;15171:7;15139:31;:40::i;:::-;14990:196;;:::o;21372:191::-;21438:16;21446:7;21438;:16::i;:::-;21430:51;;;;;;;;;;;;;;;;;;;;;;21513:43;21523:13;21513:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21538:17;21547:7;21538:8;:17::i;:::-;21513:9;:43::i;:::-;21491:10;:19;21502:7;21491:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21372:191;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11228:347:4:-;11349:4;11374:15;:2;:13;;;:15::i;:::-;11369:58;;11412:4;11405:11;;;;11369:58;11437:13;11469:2;11453:36;;;11490:10;11502:4;11508:7;11517:5;11453:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11453:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11453:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11453:70:4;;;;;;;;;11437:86;;4241:10;11551:16;;11541:26;;;:6;:26;;;;11533:35;;;11228:347;;;;;;;:::o;8362:152::-;8419:4;8435:13;8451:11;:20;8463:7;8451:20;;;;;;;;;;;;;;;;;;;;;8435:36;;8505:1;8488:19;;:5;:19;;;;8481:26;;;8362:152;;;:::o;9978:722::-;10166:4;10142:28;;:11;:20;10154:7;10142:20;;;;;;;;;;;;;;;;;;;;;:28;;;10134:78;;;;;;;;;;;;;;;;;;;;;;10313:1;10299:16;;:2;:16;;;;10291:50;;;;;;;;;;;;;;;;;;;;;;10392:23;10407:7;10392:14;:23::i;:::-;10524:2;10501:11;:20;10513:7;10501:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10536:35;:17;:23;10554:4;10536:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10581:33;:17;:21;10599:2;10581:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10685:7;10681:2;10666:27;;10675:4;10666:27;;;;;;;;;;;;9978:722;;;:::o;16962:1128::-;17224:22;17249:32;17279:1;17249:12;:18;17262:4;17249:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17224:57;;17291:18;17312:17;:26;17330:7;17312:26;;;;;;;;;;;;17291:47;;17456:14;17442:10;:28;17438:323;;17486:19;17508:12;:18;17521:4;17508:18;;;;;;;;;;;;;;;17527:14;17508:34;;;;;;;;;;;;;;;;17486:56;;17590:11;17557:12;:18;17570:4;17557:18;;;;;;;;;;;;;;;17576:10;17557:30;;;;;;;;;;;;;;;:44;;;;17706:10;17673:17;:30;17691:11;17673:30;;;;;;;;;;;:43;;;;17438:323;;17847:12;:18;17860:4;17847:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16962:1128;;;;:::o;15808:183::-;15921:12;:16;15934:2;15921:16;;;;;;;;;;;;;;;:23;;;;15892:17;:26;15910:7;15892:26;;;;;;;;;;;:52;;;;15954:12;:16;15967:2;15954:16;;;;;;;;;;;;;;;15976:7;15954:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15954:30:4;;;;;;;;;;;;;;;;;;;;;;15808:183;;:::o;9277:502::-;9433:16;9441:7;9433;:16::i;:::-;9432:17;9424:50;;;;;;;;;;;;;;;;;;;;;;9506:1;9492:16;;:2;:16;;;;9484:44;;;;;;;;;;;;;;;;;;;;;;9642:2;9619:11;:20;9631:7;9619:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9654:33;:17;:21;9672:2;9654:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9764:7;9760:2;9739:33;;9756:1;9739:33;;;;;;;;;;;;9277:502;;:::o;16186:161::-;16289:10;:17;;;;16262:15;:24;16278:7;16262:24;;;;;;;;;;;:44;;;;16316:10;16332:7;16316:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16316:24:4;;;;;;;;;;;;;;;;;;;;;;16186:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11656:171:4:-;11755:1;11719:38;;:15;:24;11735:7;11719:24;;;;;;;;;;;;;;;;;;;;;:38;;;11715:106;;11808:1;11773:15;:24;11789:7;11773:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11715:106;11656:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;334:1885:6:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:130;;353:6;340:20;331:29;;365:33;392:5;365:33;;;325:78;;;;;410:128;;489:6;476:20;467:29;;501:32;527:5;501:32;;;461:77;;;;;545:132;;628:6;622:13;613:22;;640:32;666:5;640:32;;;607:70;;;;;685:440;;786:3;779:4;771:6;767:17;763:27;753:2;;804:1;801;794:12;753:2;841:6;828:20;863:64;878:48;919:6;878:48;;;863:64;;;854:73;;947:6;940:5;933:21;983:4;975:6;971:17;1016:4;1009:5;1005:16;1051:3;1042:6;1037:3;1033:16;1030:25;1027:2;;;1068:1;1065;1058:12;1027:2;1078:41;1112:6;1107:3;1102;1078:41;;;746:379;;;;;;;;1134:442;;1236:3;1229:4;1221:6;1217:17;1213:27;1203:2;;1254:1;1251;1244:12;1203:2;1291:6;1278:20;1313:65;1328:49;1370:6;1328:49;;;1313:65;;;1304:74;;1398:6;1391:5;1384:21;1434:4;1426:6;1422:17;1467:4;1460:5;1456:16;1502:3;1493:6;1488:3;1484:16;1481:25;1478:2;;;1519:1;1516;1509:12;1478:2;1529:41;1563:6;1558:3;1553;1529:41;;;1196:380;;;;;;;;1584:130;;1664:6;1651:20;1642:29;;1676:33;1703:5;1676:33;;;1636:78;;;;;1721:241;;1825:2;1813:9;1804:7;1800:23;1796:32;1793:2;;;1841:1;1838;1831:12;1793:2;1876:1;1893:53;1938:7;1929:6;1918:9;1914:22;1893:53;;;1883:63;;1855:97;1787:175;;;;;1969:366;;;2090:2;2078:9;2069:7;2065:23;2061:32;2058:2;;;2106:1;2103;2096:12;2058:2;2141:1;2158:53;2203:7;2194:6;2183:9;2179:22;2158:53;;;2148:63;;2120:97;2248:2;2266:53;2311:7;2302:6;2291:9;2287:22;2266:53;;;2256:63;;2227:98;2052:283;;;;;;2342:491;;;;2480:2;2468:9;2459:7;2455:23;2451:32;2448:2;;;2496:1;2493;2486:12;2448:2;2531:1;2548:53;2593:7;2584:6;2573:9;2569:22;2548:53;;;2538:63;;2510:97;2638:2;2656:53;2701:7;2692:6;2681:9;2677:22;2656:53;;;2646:63;;2617:98;2746:2;2764:53;2809:7;2800:6;2789:9;2785:22;2764:53;;;2754:63;;2725:98;2442:391;;;;;;2840:721;;;;;3004:3;2992:9;2983:7;2979:23;2975:33;2972:2;;;3021:1;3018;3011:12;2972:2;3056:1;3073:53;3118:7;3109:6;3098:9;3094:22;3073:53;;;3063:63;;3035:97;3163:2;3181:53;3226:7;3217:6;3206:9;3202:22;3181:53;;;3171:63;;3142:98;3271:2;3289:53;3334:7;3325:6;3314:9;3310:22;3289:53;;;3279:63;;3250:98;3407:2;3396:9;3392:18;3379:32;3431:18;3423:6;3420:30;3417:2;;;3463:1;3460;3453:12;3417:2;3483:62;3537:7;3528:6;3517:9;3513:22;3483:62;;;3473:72;;3358:193;2966:595;;;;;;;;3568:360;;;3686:2;3674:9;3665:7;3661:23;3657:32;3654:2;;;3702:1;3699;3692:12;3654:2;3737:1;3754:53;3799:7;3790:6;3779:9;3775:22;3754:53;;;3744:63;;3716:97;3844:2;3862:50;3904:7;3895:6;3884:9;3880:22;3862:50;;;3852:60;;3823:95;3648:280;;;;;;3935:366;;;4056:2;4044:9;4035:7;4031:23;4027:32;4024:2;;;4072:1;4069;4062:12;4024:2;4107:1;4124:53;4169:7;4160:6;4149:9;4145:22;4124:53;;;4114:63;;4086:97;4214:2;4232:53;4277:7;4268:6;4257:9;4253:22;4232:53;;;4222:63;;4193:98;4018:283;;;;;;4308:235;;4409:2;4397:9;4388:7;4384:23;4380:32;4377:2;;;4425:1;4422;4415:12;4377:2;4460:1;4477:50;4519:7;4510:6;4499:9;4495:22;4477:50;;;4467:60;;4439:94;4371:172;;;;;4550:472;;;4681:2;4669:9;4660:7;4656:23;4652:32;4649:2;;;4697:1;4694;4687:12;4649:2;4732:1;4749:53;4794:7;4785:6;4774:9;4770:22;4749:53;;;4739:63;;4711:97;4867:2;4856:9;4852:18;4839:32;4891:18;4883:6;4880:30;4877:2;;;4923:1;4920;4913:12;4877:2;4943:63;4998:7;4989:6;4978:9;4974:22;4943:63;;;4933:73;;4818:194;4643:379;;;;;;5029:701;;;;5186:2;5174:9;5165:7;5161:23;5157:32;5154:2;;;5202:1;5199;5192:12;5154:2;5237:1;5254:53;5299:7;5290:6;5279:9;5275:22;5254:53;;;5244:63;;5216:97;5372:2;5361:9;5357:18;5344:32;5396:18;5388:6;5385:30;5382:2;;;5428:1;5425;5418:12;5382:2;5448:63;5503:7;5494:6;5483:9;5479:22;5448:63;;;5438:73;;5323:194;5576:2;5565:9;5561:18;5548:32;5600:18;5592:6;5589:30;5586:2;;;5632:1;5629;5622:12;5586:2;5652:62;5706:7;5697:6;5686:9;5682:22;5652:62;;;5642:72;;5527:193;5148:582;;;;;;5737:239;;5840:2;5828:9;5819:7;5815:23;5811:32;5808:2;;;5856:1;5853;5846:12;5808:2;5891:1;5908:52;5952:7;5943:6;5932:9;5928:22;5908:52;;;5898:62;;5870:96;5802:174;;;;;5983:261;;6097:2;6085:9;6076:7;6072:23;6068:32;6065:2;;;6113:1;6110;6103:12;6065:2;6148:1;6165:63;6220:7;6211:6;6200:9;6196:22;6165:63;;;6155:73;;6127:107;6059:185;;;;;6251:241;;6355:2;6343:9;6334:7;6330:23;6326:32;6323:2;;;6371:1;6368;6361:12;6323:2;6406:1;6423:53;6468:7;6459:6;6448:9;6444:22;6423:53;;;6413:63;;6385:97;6317:175;;;;;6499:142;6590:45;6629:5;6590:45;;;6585:3;6578:58;6572:69;;;6648:113;6731:24;6749:5;6731:24;;;6726:3;6719:37;6713:48;;;6768:104;6845:21;6860:5;6845:21;;;6840:3;6833:34;6827:45;;;6879:343;;6989:38;7021:5;6989:38;;;7039:70;7102:6;7097:3;7039:70;;;7032:77;;7114:52;7159:6;7154:3;7147:4;7140:5;7136:16;7114:52;;;7187:29;7209:6;7187:29;;;7182:3;7178:39;7171:46;;6969:253;;;;;;7229:347;;7341:39;7374:5;7341:39;;;7392:71;7456:6;7451:3;7392:71;;;7385:78;;7468:52;7513:6;7508:3;7501:4;7494:5;7490:16;7468:52;;;7541:29;7563:6;7541:29;;;7536:3;7532:39;7525:46;;7321:255;;;;;;7584:315;;7744:67;7808:2;7803:3;7744:67;;;7737:74;;7844:17;7840:1;7835:3;7831:11;7824:38;7890:2;7885:3;7881:12;7874:19;;7730:169;;;;7908:327;;8068:67;8132:2;8127:3;8068:67;;;8061:74;;8168:29;8164:1;8159:3;8155:11;8148:50;8226:2;8221:3;8217:12;8210:19;;8054:181;;;;8244:320;;8404:67;8468:2;8463:3;8404:67;;;8397:74;;8504:22;8500:1;8495:3;8491:11;8484:43;8555:2;8550:3;8546:12;8539:19;;8390:174;;;;8573:374;;8733:67;8797:2;8792:3;8733:67;;;8726:74;;8833:34;8829:1;8824:3;8820:11;8813:55;8902:7;8897:2;8892:3;8888:12;8881:29;8938:2;8933:3;8929:12;8922:19;;8719:228;;;;8956:380;;9116:67;9180:2;9175:3;9116:67;;;9109:74;;9216:34;9212:1;9207:3;9203:11;9196:55;9285:13;9280:2;9275:3;9271:12;9264:35;9327:2;9322:3;9318:12;9311:19;;9102:234;;;;9345:321;;9505:67;9569:2;9564:3;9505:67;;;9498:74;;9605:23;9601:1;9596:3;9592:11;9585:44;9657:2;9652:3;9648:12;9641:19;;9491:175;;;;9675:328;;9835:67;9899:2;9894:3;9835:67;;;9828:74;;9935:30;9931:1;9926:3;9922:11;9915:51;9994:2;9989:3;9985:12;9978:19;;9821:182;;;;10012:322;;10172:67;10236:2;10231:3;10172:67;;;10165:74;;10272:24;10268:1;10263:3;10259:11;10252:45;10325:2;10320:3;10316:12;10309:19;;10158:176;;;;10343:448;;10503:67;10567:2;10562:3;10503:67;;;10496:74;;10603:34;10599:1;10594:3;10590:11;10583:55;10672:34;10667:2;10662:3;10658:12;10651:56;10741:12;10736:2;10731:3;10727:12;10720:34;10782:2;10777:3;10773:12;10766:19;;10489:302;;;;10799:113;10882:24;10900:5;10882:24;;;10877:3;10870:37;10864:48;;;10919:213;;11037:2;11026:9;11022:18;11014:26;;11051:71;11119:1;11108:9;11104:17;11095:6;11051:71;;;11008:124;;;;;11139:229;;11265:2;11254:9;11250:18;11242:26;;11279:79;11355:1;11344:9;11340:17;11331:6;11279:79;;;11236:132;;;;;11375:647;;11603:3;11592:9;11588:19;11580:27;;11618:79;11694:1;11683:9;11679:17;11670:6;11618:79;;;11708:72;11776:2;11765:9;11761:18;11752:6;11708:72;;;11791;11859:2;11848:9;11844:18;11835:6;11791:72;;;11911:9;11905:4;11901:20;11896:2;11885:9;11881:18;11874:48;11936:76;12007:4;11998:6;11936:76;;;11928:84;;11574:448;;;;;;;;12029:201;;12141:2;12130:9;12126:18;12118:26;;12155:65;12217:1;12206:9;12202:17;12193:6;12155:65;;;12112:118;;;;;12237:301;;12375:2;12364:9;12360:18;12352:26;;12425:9;12419:4;12415:20;12411:1;12400:9;12396:17;12389:47;12450:78;12523:4;12514:6;12450:78;;;12442:86;;12346:192;;;;;12545:407;;12736:2;12725:9;12721:18;12713:26;;12786:9;12780:4;12776:20;12772:1;12761:9;12757:17;12750:47;12811:131;12937:4;12811:131;;;12803:139;;12707:245;;;;12959:407;;13150:2;13139:9;13135:18;13127:26;;13200:9;13194:4;13190:20;13186:1;13175:9;13171:17;13164:47;13225:131;13351:4;13225:131;;;13217:139;;13121:245;;;;13373:407;;13564:2;13553:9;13549:18;13541:26;;13614:9;13608:4;13604:20;13600:1;13589:9;13585:17;13578:47;13639:131;13765:4;13639:131;;;13631:139;;13535:245;;;;13787:407;;13978:2;13967:9;13963:18;13955:26;;14028:9;14022:4;14018:20;14014:1;14003:9;13999:17;13992:47;14053:131;14179:4;14053:131;;;14045:139;;13949:245;;;;14201:407;;14392:2;14381:9;14377:18;14369:26;;14442:9;14436:4;14432:20;14428:1;14417:9;14413:17;14406:47;14467:131;14593:4;14467:131;;;14459:139;;14363:245;;;;14615:407;;14806:2;14795:9;14791:18;14783:26;;14856:9;14850:4;14846:20;14842:1;14831:9;14827:17;14820:47;14881:131;15007:4;14881:131;;;14873:139;;14777:245;;;;15029:407;;15220:2;15209:9;15205:18;15197:26;;15270:9;15264:4;15260:20;15256:1;15245:9;15241:17;15234:47;15295:131;15421:4;15295:131;;;15287:139;;15191:245;;;;15443:407;;15634:2;15623:9;15619:18;15611:26;;15684:9;15678:4;15674:20;15670:1;15659:9;15655:17;15648:47;15709:131;15835:4;15709:131;;;15701:139;;15605:245;;;;15857:407;;16048:2;16037:9;16033:18;16025:26;;16098:9;16092:4;16088:20;16084:1;16073:9;16069:17;16062:47;16123:131;16249:4;16123:131;;;16115:139;;16019:245;;;;16271:213;;16389:2;16378:9;16374:18;16366:26;;16403:71;16471:1;16460:9;16456:17;16447:6;16403:71;;;16360:124;;;;;16491:324;;16637:2;16626:9;16622:18;16614:26;;16651:71;16719:1;16708:9;16704:17;16695:6;16651:71;;;16733:72;16801:2;16790:9;16786:18;16777:6;16733:72;;;16608:207;;;;;;16822:256;;16884:2;16878:9;16868:19;;16922:4;16914:6;16910:17;17021:6;17009:10;17006:22;16985:18;16973:10;16970:34;16967:62;16964:2;;;17042:1;17039;17032:12;16964:2;17062:10;17058:2;17051:22;16862:216;;;;;17085:321;;17228:18;17220:6;17217:30;17214:2;;;17260:1;17257;17250:12;17214:2;17327:4;17323:9;17316:4;17308:6;17304:17;17300:33;17292:41;;17391:4;17385;17381:15;17373:23;;17151:255;;;;17413:322;;17557:18;17549:6;17546:30;17543:2;;;17589:1;17586;17579:12;17543:2;17656:4;17652:9;17645:4;17637:6;17633:17;17629:33;17621:41;;17720:4;17714;17710:15;17702:23;;17480:255;;;;17742:121;;17835:5;17829:12;17819:22;;17800:63;;;;17870:122;;17964:5;17958:12;17948:22;;17929:63;;;;18000:162;;18114:6;18109:3;18102:19;18151:4;18146:3;18142:14;18127:29;;18095:67;;;;;18171:163;;18286:6;18281:3;18274:19;18323:4;18318:3;18314:14;18299:29;;18267:67;;;;;18342:91;;18404:24;18422:5;18404:24;;;18393:35;;18387:46;;;;18440:85;;18513:5;18506:13;18499:21;18488:32;;18482:43;;;;18532:72;;18594:5;18583:16;;18577:27;;;;18611:144;;18683:66;18676:5;18672:78;18661:89;;18655:100;;;;18762:121;;18835:42;18828:5;18824:54;18813:65;;18807:76;;;;18890:72;;18952:5;18941:16;;18935:27;;;;18969:129;;19056:37;19087:5;19056:37;;;19043:50;;19037:61;;;;19105:121;;19184:37;19215:5;19184:37;;;19171:50;;19165:61;;;;19233:108;;19312:24;19330:5;19312:24;;;19299:37;;19293:48;;;;19349:145;19430:6;19425:3;19420;19407:30;19486:1;19477:6;19472:3;19468:16;19461:27;19400:94;;;;19503:268;19568:1;19575:101;19589:6;19586:1;19583:13;19575:101;;;19665:1;19660:3;19656:11;19650:18;19646:1;19641:3;19637:11;19630:39;19611:2;19608:1;19604:10;19599:15;;19575:101;;;19691:6;19688:1;19685:13;19682:2;;;19756:1;19747:6;19742:3;19738:16;19731:27;19682:2;19552:219;;;;;19779:97;;19867:2;19863:7;19858:2;19851:5;19847:14;19843:28;19833:38;;19827:49;;;;19884:117;19953:24;19971:5;19953:24;;;19946:5;19943:35;19933:2;;19992:1;19989;19982:12;19933:2;19927:74;;20008:111;20074:21;20089:5;20074:21;;;20067:5;20064:32;20054:2;;20110:1;20107;20100:12;20054:2;20048:71;;20126:117;20195:24;20213:5;20195:24;;;20188:5;20185:35;20175:2;;20234:1;20231;20224:12;20175:2;20169:74;;20250:115;20318:23;20335:5;20318:23;;;20311:5;20308:34;20298:2;;20356:1;20353;20346:12;20298:2;20292:73;;20372:117;20441:24;20459:5;20441:24;;;20434:5;20431:35;20421:2;;20480:1;20477;20470:12;20421:2;20415:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport './ERC721Mintable.sol';\nimport './Verifier.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n\n    Verifier private verifier;\n\n    constructor (address verifierContractAddress) public {\n        verifier = Verifier(verifierContractAddress);\n    }\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address ownerAddress;\n    }\n\n    uint256 private solutionLength = 0;\n\n    // TODO define an array of the above struct\n    Solution[] private solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private usedSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256, address); \n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address solutionAddress) public returns(uint256) {\n        solutionLength++;\n\n        Solution memory newSolution = Solution({\n            index: solutionLength,\n            ownerAddress: solutionAddress\n        });\n\n        solutions.push(newSolution);\n\n        emit SolutionAdded(newSolution.index, newSolution.ownerAddress);\n        return solutionLength;\n    } \n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    // function mintNewNFT(address to, uint256 tokenId, Proof proof, uint[2] memory inputs)\n    // public {\n    //     bytes32 key = keccak256(abi.encodePacked(a, b, c, inputs));\n    //     require(usedSolutions[key].index > 0, \"Solution already used.\");\n    //     require(verifier.verifyTx(proof, inputs), \"Verification failed\");\n\n    //     uint256 index = addSolution(to);\n    //     usedSolutions[key] = solutions[index];\n\n    //     mint(to, tokenId);       \n    // }\n\n\n}\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/cesar.agena/Blockchain Nano Degree/capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7782
      ]
    },
    "id": 7783,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7708,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7709,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7710,
        "nodeType": "ImportDirective",
        "scope": 7783,
        "sourceUnit": 1439,
        "src": "68:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7711,
        "nodeType": "ImportDirective",
        "scope": 7783,
        "sourceUnit": 8705,
        "src": "99:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7712,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "365:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1438",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7713,
            "nodeType": "InheritanceSpecifier",
            "src": "365:17:6"
          }
        ],
        "contractDependencies": [
          399,
          465,
          511,
          997,
          1295,
          1405,
          1438,
          7706
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7782,
        "linearizedBaseContracts": [
          7782,
          1438,
          1405,
          7706,
          1295,
          997,
          511,
          465,
          399
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7715,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7782,
            "src": "390:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8704",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7714,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8704,
              "src": "390:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8704",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7726,
              "nodeType": "Block",
              "src": "475:61:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7720,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7715,
                      "src": "485:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8704",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7722,
                          "name": "verifierContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7717,
                          "src": "505:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7721,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8704,
                        "src": "496:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8704_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "496:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8704",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "485:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8704",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7725,
                  "nodeType": "ExpressionStatement",
                  "src": "485:44:6"
                }
              ]
            },
            "documentation": null,
            "id": 7727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7717,
                  "name": "verifierContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7727,
                  "src": "435:31:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:33:6"
            },
            "returnParameters": {
              "id": 7719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:6"
            },
            "scope": 7782,
            "src": "422:114:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7732,
            "members": [
              {
                "constant": false,
                "id": 7729,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "642:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7728,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7731,
                "name": "ownerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "665:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7730,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7782,
            "src": "616:76:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7735,
            "name": "solutionLength",
            "nodeType": "VariableDeclaration",
            "scope": 7782,
            "src": "698:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "698:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "731:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7738,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7782,
            "src": "787:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7736,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7732,
                "src": "787:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7737,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "787:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7742,
            "name": "usedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7782,
            "src": "887:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7741,
              "keyType": {
                "id": 7739,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "895:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "887:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7740,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7732,
                "src": "906:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7748,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "1025:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7746,
                  "indexed": false,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "1034:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:18:6"
            },
            "src": "1005:38:6"
          },
          {
            "body": {
              "id": 7780,
              "nodeType": "Block",
              "src": "1203:315:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1213:16:6",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7755,
                      "name": "solutionLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7735,
                      "src": "1213:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:16:6"
                },
                {
                  "assignments": [
                    7759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7759,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7780,
                      "src": "1240:27:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7758,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7732,
                        "src": "1240:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7764,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7761,
                        "name": "solutionLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1300:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7762,
                        "name": "solutionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7750,
                        "src": "1342:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7760,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7732,
                      "src": "1270:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7732_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "ownerAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1270:98:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7732_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1240:128:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7768,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7759,
                        "src": "1394:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7765,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7738,
                        "src": "1379:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7732_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1379:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7732_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7770,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7772,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7759,
                          "src": "1436:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7729,
                        "src": "1436:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7774,
                          "name": "newSolution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7759,
                          "src": "1455:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ownerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7731,
                        "src": "1455:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7771,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7748,
                      "src": "1422:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7777,
                  "nodeType": "EmitStatement",
                  "src": "1417:63:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7778,
                    "name": "solutionLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7735,
                    "src": "1497:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7754,
                  "id": 7779,
                  "nodeType": "Return",
                  "src": "1490:21:6"
                }
              ]
            },
            "documentation": null,
            "id": 7781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7750,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7781,
                  "src": "1154:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:25:6"
            },
            "returnParameters": {
              "id": 7754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7781,
                  "src": "1194:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:9:6"
            },
            "scope": 7782,
            "src": "1133:385:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7783,
        "src": "334:1885:6"
      }
    ],
    "src": "0:2258:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7782
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7708,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7709,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 1439,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7783,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7710,
        "name": "ImportDirective",
        "src": "68:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 8705,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7783,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7711,
        "name": "ImportDirective",
        "src": "99:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            399,
            465,
            511,
            997,
            1295,
            1405,
            1438,
            7706
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7782,
            1438,
            1405,
            7706,
            1295,
            997,
            511,
            465,
            399
          ],
          "name": "SolnSquareVerifier",
          "scope": 7783
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1438,
                  "type": "contract CustomERC721Token"
                },
                "id": 7712,
                "name": "UserDefinedTypeName",
                "src": "365:17:6"
              }
            ],
            "id": 7713,
            "name": "InheritanceSpecifier",
            "src": "365:17:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7782,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8704,
                  "type": "contract Verifier"
                },
                "id": 7714,
                "name": "UserDefinedTypeName",
                "src": "390:8:6"
              }
            ],
            "id": 7715,
            "name": "VariableDeclaration",
            "src": "390:25:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7782,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierContractAddress",
                      "scope": 7727,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7716,
                        "name": "ElementaryTypeName",
                        "src": "435:7:6"
                      }
                    ],
                    "id": 7717,
                    "name": "VariableDeclaration",
                    "src": "435:31:6"
                  }
                ],
                "id": 7718,
                "name": "ParameterList",
                "src": "434:33:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7719,
                "name": "ParameterList",
                "src": "475:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7715,
                              "type": "contract Verifier",
                              "value": "verifier"
                            },
                            "id": 7720,
                            "name": "Identifier",
                            "src": "485:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8704,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7721,
                                "name": "Identifier",
                                "src": "496:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7717,
                                  "type": "address",
                                  "value": "verifierContractAddress"
                                },
                                "id": 7722,
                                "name": "Identifier",
                                "src": "505:23:6"
                              }
                            ],
                            "id": 7723,
                            "name": "FunctionCall",
                            "src": "496:33:6"
                          }
                        ],
                        "id": 7724,
                        "name": "Assignment",
                        "src": "485:44:6"
                      }
                    ],
                    "id": 7725,
                    "name": "ExpressionStatement",
                    "src": "485:44:6"
                  }
                ],
                "id": 7726,
                "name": "Block",
                "src": "475:61:6"
              }
            ],
            "id": 7727,
            "name": "FunctionDefinition",
            "src": "422:114:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7782,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7728,
                    "name": "ElementaryTypeName",
                    "src": "642:7:6"
                  }
                ],
                "id": 7729,
                "name": "VariableDeclaration",
                "src": "642:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ownerAddress",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7730,
                    "name": "ElementaryTypeName",
                    "src": "665:7:6"
                  }
                ],
                "id": 7731,
                "name": "VariableDeclaration",
                "src": "665:20:6"
              }
            ],
            "id": 7732,
            "name": "StructDefinition",
            "src": "616:76:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionLength",
              "scope": 7782,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7733,
                "name": "ElementaryTypeName",
                "src": "698:7:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7734,
                "name": "Literal",
                "src": "731:1:6"
              }
            ],
            "id": 7735,
            "name": "VariableDeclaration",
            "src": "698:34:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7782,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7732,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7736,
                    "name": "UserDefinedTypeName",
                    "src": "787:8:6"
                  }
                ],
                "id": 7737,
                "name": "ArrayTypeName",
                "src": "787:10:6"
              }
            ],
            "id": 7738,
            "name": "VariableDeclaration",
            "src": "787:28:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "usedSolutions",
              "scope": 7782,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7739,
                    "name": "ElementaryTypeName",
                    "src": "895:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7732,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7740,
                    "name": "UserDefinedTypeName",
                    "src": "906:8:6"
                  }
                ],
                "id": 7741,
                "name": "Mapping",
                "src": "887:28:6"
              }
            ],
            "id": 7742,
            "name": "VariableDeclaration",
            "src": "887:50:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7748,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7743,
                        "name": "ElementaryTypeName",
                        "src": "1025:7:6"
                      }
                    ],
                    "id": 7744,
                    "name": "VariableDeclaration",
                    "src": "1025:7:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "",
                      "scope": 7748,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7745,
                        "name": "ElementaryTypeName",
                        "src": "1034:7:6"
                      }
                    ],
                    "id": 7746,
                    "name": "VariableDeclaration",
                    "src": "1034:7:6"
                  }
                ],
                "id": 7747,
                "name": "ParameterList",
                "src": "1024:18:6"
              }
            ],
            "id": 7748,
            "name": "EventDefinition",
            "src": "1005:38:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7782,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solutionAddress",
                      "scope": 7781,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7749,
                        "name": "ElementaryTypeName",
                        "src": "1154:7:6"
                      }
                    ],
                    "id": 7750,
                    "name": "VariableDeclaration",
                    "src": "1154:23:6"
                  }
                ],
                "id": 7751,
                "name": "ParameterList",
                "src": "1153:25:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7781,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7752,
                        "name": "ElementaryTypeName",
                        "src": "1194:7:6"
                      }
                    ],
                    "id": 7753,
                    "name": "VariableDeclaration",
                    "src": "1194:7:6"
                  }
                ],
                "id": 7754,
                "name": "ParameterList",
                "src": "1193:9:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7735,
                              "type": "uint256",
                              "value": "solutionLength"
                            },
                            "id": 7755,
                            "name": "Identifier",
                            "src": "1213:14:6"
                          }
                        ],
                        "id": 7756,
                        "name": "UnaryOperation",
                        "src": "1213:16:6"
                      }
                    ],
                    "id": 7757,
                    "name": "ExpressionStatement",
                    "src": "1213:16:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7759
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSolution",
                          "scope": 7780,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7732,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7758,
                            "name": "UserDefinedTypeName",
                            "src": "1240:8:6"
                          }
                        ],
                        "id": 7759,
                        "name": "VariableDeclaration",
                        "src": "1240:27:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "ownerAddress"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7732,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7760,
                            "name": "Identifier",
                            "src": "1270:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7735,
                              "type": "uint256",
                              "value": "solutionLength"
                            },
                            "id": 7761,
                            "name": "Identifier",
                            "src": "1300:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7750,
                              "type": "address",
                              "value": "solutionAddress"
                            },
                            "id": 7762,
                            "name": "Identifier",
                            "src": "1342:15:6"
                          }
                        ],
                        "id": 7763,
                        "name": "FunctionCall",
                        "src": "1270:98:6"
                      }
                    ],
                    "id": 7764,
                    "name": "VariableDeclarationStatement",
                    "src": "1240:128:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7732_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7738,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7765,
                                "name": "Identifier",
                                "src": "1379:9:6"
                              }
                            ],
                            "id": 7767,
                            "name": "MemberAccess",
                            "src": "1379:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7759,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "newSolution"
                            },
                            "id": 7768,
                            "name": "Identifier",
                            "src": "1394:11:6"
                          }
                        ],
                        "id": 7769,
                        "name": "FunctionCall",
                        "src": "1379:27:6"
                      }
                    ],
                    "id": 7770,
                    "name": "ExpressionStatement",
                    "src": "1379:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7748,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7771,
                            "name": "Identifier",
                            "src": "1422:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "index",
                              "referencedDeclaration": 7729,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7759,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "newSolution"
                                },
                                "id": 7772,
                                "name": "Identifier",
                                "src": "1436:11:6"
                              }
                            ],
                            "id": 7773,
                            "name": "MemberAccess",
                            "src": "1436:17:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ownerAddress",
                              "referencedDeclaration": 7731,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7759,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "newSolution"
                                },
                                "id": 7774,
                                "name": "Identifier",
                                "src": "1455:11:6"
                              }
                            ],
                            "id": 7775,
                            "name": "MemberAccess",
                            "src": "1455:24:6"
                          }
                        ],
                        "id": 7776,
                        "name": "FunctionCall",
                        "src": "1422:58:6"
                      }
                    ],
                    "id": 7777,
                    "name": "EmitStatement",
                    "src": "1417:63:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7754
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 7735,
                          "type": "uint256",
                          "value": "solutionLength"
                        },
                        "id": 7778,
                        "name": "Identifier",
                        "src": "1497:14:6"
                      }
                    ],
                    "id": 7779,
                    "name": "Return",
                    "src": "1490:21:6"
                  }
                ],
                "id": 7780,
                "name": "Block",
                "src": "1203:315:6"
              }
            ],
            "id": 7781,
            "name": "FunctionDefinition",
            "src": "1133:385:6"
          }
        ],
        "id": 7782,
        "name": "ContractDefinition",
        "src": "334:1885:6"
      }
    ],
    "id": 7783,
    "name": "SourceUnit",
    "src": "0:2258:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-17T21:46:22.607Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}