// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

// use the contents from proof.json generated from zokrates steps
const proof39 = require('./proof39.json');
const proof416 = require('./proof416.json');
   
contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    describe('test verifier', function () {
        beforeEach(async function () { 
            this.contract = await Verifier.new({from: account_one});
        });

        // Test verification with correct proof
        it('should return correct proof given correct inputs', async function () { 
            let result = await this.contract.verifyTx.call(proof39.proof, proof39.inputs, {
                from: account_one,
            });

            assert.equal(result, true, "Wrong verification for 3*3");

            result = await this.contract.verifyTx.call(proof416.proof, proof416.inputs, {
                from: account_one,
            });

            assert.equal(result, true, "Wrong verification for 4*4");

        });

        // Test verification with incorrect proof
        it('should return incorrect proof given incorrect inputs', async function () { 
            const result = await this.contract.verifyTx.call(proof416.proof, [0,0], {
                from: account_one,
            });

            assert.equal(result, false, "Wrong verification");
        });
    });

});