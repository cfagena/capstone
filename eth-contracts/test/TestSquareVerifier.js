// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

// use the contents from proof.json generated from zokrates steps
const proof = require('../../zokrates/code/square/proof.json');
   
contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    describe('test verifier', function () {
        beforeEach(async function () { 
            this.contract = await Verifier.new({from: account_one});
        })
    });

    // Test verification with correct proof
    it('should return correct proof given correct inputs', async function () { 
        //console.log(`contract: ${this.contract}`);

        const result = await this.contract.verifyTx.call(_proof.a, _proof.b, _proof.c, proof.inputs, {
            from: account_one,
        });

        assert.equal(result, true, "Wrong verification");

        //console.log(`result: ${result}`);
    });

    // Test verification with incorrect proof
    it('should return incorrect proof given incorrect inputs', async function () { 
        
    });


});